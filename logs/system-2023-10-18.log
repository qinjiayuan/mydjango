2023-10-18 08:59:06,597 [DEBUG]    utils.py.debug_sql [128] -- (0.063) SELECT "COUNTERPARTY_ORG"."ID", "COUNTERPARTY_ORG"."CORPORATE_NAME", "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE", "COUNTERPARTY_ORG"."ID_KIND", "COUNTERPARTY_ORG"."SECONDRAY_TRADER_CLIENT", "COUNTERPARTY_ORG"."SECONDRAY_TRADER", "COUNTERPARTY_ORG"."INDUSTRY", "COUNTERPARTY_ORG"."SCOPE_BUSINESS", "COUNTERPARTY_ORG"."LIST_ATTRIBUTE", "COUNTERPARTY_ORG"."START_DATE", "COUNTERPARTY_ORG"."END_DATE", "COUNTERPARTY_ORG"."CAPITAL_ATTRIBUTE", "COUNTERPARTY_ORG"."NATURE", "COUNTERPARTY_ORG"."APTITUDE", "COUNTERPARTY_ORG"."NONTAXRESIDENT", "COUNTERPARTY_ORG"."REGISTER_COUNTRY", "COUNTERPARTY_ORG"."REGISTERED_ADDRESS", "COUNTERPARTY_ORG"."OFFICE_ADDRESS", "COUNTERPARTY_ORG"."SETUP_DATE", "COUNTERPARTY_ORG"."REGISTERED_CAPITAL", "COUNTERPARTY_ORG"."CLIENT_TYPE", "COUNTERPARTY_ORG"."CREATE_TIME", "COUNTERPARTY_ORG"."CREATE_BY", "COUNTERPARTY_ORG"."UPDATE_TIME", "COUNTERPARTY_ORG"."UPDATE_BY", "COUNTERPARTY_ORG"."AUDIT_STATUS", "COUNTERPARTY_ORG"."ORGAN_TYPE", "COUNTERPARTY_ORG"."INTRODUCTION_DEPARTMENT", "COUNTERPARTY_ORG"."CUSTOMER_MANAGER", "COUNTERPARTY_ORG"."AML_MONITOR_FLAG", "COUNTERPARTY_ORG"."LASTEST_CLIENT_ID", "COUNTERPARTY_ORG"."CONCERN_FLAG", "COUNTERPARTY_ORG"."REGISTER_PROVINCE", "COUNTERPARTY_ORG"."REGISTER_CITY", "COUNTERPARTY_ORG"."ISSUING_DATE", "COUNTERPARTY_ORG"."BIG_CLIENT" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 08:59:06,682 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."ID", "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."ABBREVIATION", "OTC_DERIVATIVE_COUNTERPARTY"."NAME_ABBREVIATION", "OTC_DERIVATIVE_COUNTERPARTY"."ORGANIZATION_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTERED_ADDRESS", "OTC_DERIVATIVE_COUNTERPARTY"."OFFICE_ADDRESS", "OTC_DERIVATIVE_COUNTERPARTY"."SCOPE_BUSINESS", "OTC_DERIVATIVE_COUNTERPARTY"."START_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."END_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."LIMITED_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."MAJOR_MECHANISM", "OTC_DERIVATIVE_COUNTERPARTY"."NATURE", "OTC_DERIVATIVE_COUNTERPARTY"."APTITUDE", "OTC_DERIVATIVE_COUNTERPARTY"."LIST_ATTRIBUTE", "OTC_DERIVATIVE_COUNTERPARTY"."CAPITAL_ATTRIBUTE", "OTC_DERIVATIVE_COUNTERPARTY"."INVESTMENT_VARIETIES", "OTC_DERIVATIVE_COUNTERPARTY"."PARTY_CONTACTMAN", "OTC_DERIVATIVE_COUNTERPARTY"."ACTUAL_CONTROLLER", "OTC_DERIVATIVE_COUNTERPARTY"."LEGAL_PERSON", "OTC_DERIVATIVE_COUNTERPARTY"."PROFESSIONAL_INVESTORS", "OTC_DERIVATIVE_COUNTERPARTY"."MOBILE_PHONE", "OTC_DERIVATIVE_COUNTERPARTY"."UNIFIEDSOCIAL_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."SIGNATURE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AGREEMENT_SIGNING_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AUDIT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."PARTY_B_CONTACT", "OTC_DERIVATIVE_COUNTERPARTY"."OUR_CONTRACTUAL_SIDE", "OTC_DERIVATIVE_COUNTERPARTY"."CREDIT_RATING", "OTC_DERIVATIVE_COUNTERPARTY"."PROTOCOL_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."OPERATOR", "OTC_DERIVATIVE_COUNTERPARTY"."NONTAXRESIDENT", "OTC_DERIVATIVE_COUNTERPARTY"."RISK_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."TERMOF_INVESTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."EXPECTED_INCOME", "OTC_DERIVATIVE_COUNTERPARTY"."REPORT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."INTRODUCTION_DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."CUSTOMER_MANAGER", "OTC_DERIVATIVE_COUNTERPARTY"."NET_TRADING", "OTC_DERIVATIVE_COUNTERPARTY"."PERFORMANCE_PROTOCOL_SIGN_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."CLASSIFICATION_RATING", "OTC_DERIVATIVE_COUNTERPARTY"."SHAREHOLDER_INFO", "OTC_DERIVATIVE_COUNTERPARTY"."HOST_DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."FAX_TEL", "OTC_DERIVATIVE_COUNTERPARTY"."IS_CREDITED", "OTC_DERIVATIVE_COUNTERPARTY"."UPDATER", "OTC_DERIVATIVE_COUNTERPARTY"."UPDATE_TIME", "OTC_DERIVATIVE_COUNTERPARTY"."AML_RISK_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTERED_CAPITAL", "OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW_DES", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."ALLOW_OPTION_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."DELETE_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."VALID_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."INVALID_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."SECONDRAY_TRADER_CLIENT", "OTC_DERIVATIVE_COUNTERPARTY"."SECONDRAY_TRADER", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_CERT_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_CERT_NO", "OTC_DERIVATIVE_COUNTERPARTY"."ECIF_CUST_NO", "OTC_DERIVATIVE_COUNTERPARTY"."SETUP_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."INDUSTRY", "OTC_DERIVATIVE_COUNTERPARTY"."RETURN_VISIT_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."RETURN_VISIT_DATA_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."EXTRAN_PROSCALE_RATIO", "OTC_DERIVATIVE_COUNTERPARTY"."MARGIN_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."PRODUCT_ESTAB_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."PAYEE_MIN_TRANSFER_AMOUNT", "OTC_DERIVATIVE_COUNTERPARTY"."PAYER_MIN_TRANSFER_AMOUNT", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_COEFFICIENT", "OTC_DERIVATIVE_COUNTERPARTY"."OP_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PUT_TAKE_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."GUARANTEE_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."EXECUTE_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."BLOCK_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."INITIAL_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."FINAL_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."CREATE_BY", "OTC_DERIVATIVE_COUNTERPARTY"."CREATE_TIME", "OTC_DERIVATIVE_COUNTERPARTY"."JOB_ID", "OTC_DERIVATIVE_COUNTERPARTY"."AUDIT_STATUS_BAK", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_COUNT", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_FIRST_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_ID_BOTH", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_ID_BOTH", "OTC_DERIVATIVE_COUNTERPARTY"."FILL_ROLE", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."SIGNED_PRODUCT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."RPT_PRODCODE", "OTC_DERIVATIVE_COUNTERPARTY"."GUARANTEE_AGRMT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."COMMISSION_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."ALLOW_BUSI_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PARTIAL_MARGIN_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."COMMISSION_RATE_HK", "OTC_DERIVATIVE_COUNTERPARTY"."PREMIUM_FEE_RATIO", "OTC_DERIVATIVE_COUNTERPARTY"."INTEREST_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."INTEREST_INTERVAL", "OTC_DERIVATIVE_COUNTERPARTY"."EXCHANGE_RATE_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."AML_MONITOR_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."CPTY_NOTIONAL_LIMIT", "OTC_DERIVATIVE_COUNTERPARTY"."BENEFIT_OVER_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."FIID", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FEE_RATE_US", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FEE_RATE_HK", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FIXED_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."RELATED_PARTY_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."RELATED_PARTY_RESULT", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTER_COUNTRY", "OTC_DERIVATIVE_COUNTERPARTY"."REMARK", "OTC_DERIVATIVE_COUNTERPARTY"."OPTION_DURATION_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."TRS_DURATION_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."AML_EXCLUDE_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."ID_KIND", "OTC_DERIVATIVE_COUNTERPARTY"."GRANT_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."GRANT_BALANCE_EXPIRE_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."MARGIN_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."CONCERN_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_END_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AB_FUTURES_PREMIUM_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."AB_FUTURES_LEVEL_FACTOR", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_TYPE_OTHER", "OTC_DERIVATIVE_COUNTERPARTY"."SPREAD", "OTC_DERIVATIVE_COUNTERPARTY"."LEI_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_PROTOCOL", "OTC_DERIVATIVE_COUNTERPARTY"."PUBLIC_RELATED", "OTC_DERIVATIVE_COUNTERPARTY"."PUBLIC_STOCK_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."INTRODUCTION_OPERATOR", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW_REASON", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_PUBLIC_RELATED", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_PUBLIC_STOCK_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."EXCHANGE_REPORT_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."CHAT_ROOM_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."NO_AUTO_VISIT", "OTC_DERIVATIVE_COUNTERPARTY"."PRODUCT_REPORT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."OPTION_PRODUCT_QUALITY_REASON", "OTC_DERIVATIVE_COUNTERPARTY"."HIS_ALLOW_BUSI_TYPE" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:02:15,225 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "COUNTERPARTY_ORG"."ID", "COUNTERPARTY_ORG"."CORPORATE_NAME", "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE", "COUNTERPARTY_ORG"."ID_KIND", "COUNTERPARTY_ORG"."SECONDRAY_TRADER_CLIENT", "COUNTERPARTY_ORG"."SECONDRAY_TRADER", "COUNTERPARTY_ORG"."INDUSTRY", "COUNTERPARTY_ORG"."SCOPE_BUSINESS", "COUNTERPARTY_ORG"."LIST_ATTRIBUTE", "COUNTERPARTY_ORG"."START_DATE", "COUNTERPARTY_ORG"."END_DATE", "COUNTERPARTY_ORG"."CAPITAL_ATTRIBUTE", "COUNTERPARTY_ORG"."NATURE", "COUNTERPARTY_ORG"."APTITUDE", "COUNTERPARTY_ORG"."NONTAXRESIDENT", "COUNTERPARTY_ORG"."REGISTER_COUNTRY", "COUNTERPARTY_ORG"."REGISTERED_ADDRESS", "COUNTERPARTY_ORG"."OFFICE_ADDRESS", "COUNTERPARTY_ORG"."SETUP_DATE", "COUNTERPARTY_ORG"."REGISTERED_CAPITAL", "COUNTERPARTY_ORG"."CLIENT_TYPE", "COUNTERPARTY_ORG"."CREATE_TIME", "COUNTERPARTY_ORG"."CREATE_BY", "COUNTERPARTY_ORG"."UPDATE_TIME", "COUNTERPARTY_ORG"."UPDATE_BY", "COUNTERPARTY_ORG"."AUDIT_STATUS", "COUNTERPARTY_ORG"."ORGAN_TYPE", "COUNTERPARTY_ORG"."INTRODUCTION_DEPARTMENT", "COUNTERPARTY_ORG"."CUSTOMER_MANAGER", "COUNTERPARTY_ORG"."AML_MONITOR_FLAG", "COUNTERPARTY_ORG"."LASTEST_CLIENT_ID", "COUNTERPARTY_ORG"."CONCERN_FLAG", "COUNTERPARTY_ORG"."REGISTER_PROVINCE", "COUNTERPARTY_ORG"."REGISTER_CITY", "COUNTERPARTY_ORG"."ISSUING_DATE", "COUNTERPARTY_ORG"."BIG_CLIENT" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类 FETCH FIRST 1 ROWS ONLY; args=('测试产品关注类',)
2023-10-18 09:05:10,145 [DEBUG]    utils.py.debug_sql [128] -- (0.063) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类 FETCH FIRST 21 ROWS ONLY; args=('测试产品关注类',)
2023-10-18 09:05:27,894 [DEBUG]    utils.py.debug_sql [128] -- (0.063) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:05:27,977 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:08:21,387 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:08:21,461 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:09:41,176 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:09:41,255 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:09:55,496 [DEBUG]    utils.py.debug_sql [128] -- (0.062) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类 FETCH FIRST 21 ROWS ONLY; args=('测试产品关注类',)
2023-10-18 09:12:51,751 [DEBUG]    utils.py.debug_sql [128] -- (0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:12:51,826 [DEBUG]    utils.py.debug_sql [128] -- (0.079) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:13:36,774 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:13:36,850 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:15:41,796 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:15:41,871 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:18:58,250 [DEBUG]    utils.py.debug_sql [128] -- (0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:20:34,890 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:21:06,730 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:21:06,810 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:21:16,890 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:21:16,964 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:24:43,612 [DEBUG]    utils.py.debug_sql [128] -- (0.062) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:24:43,695 [DEBUG]    utils.py.debug_sql [128] -- (0.079) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:25:00,170 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:25:00,247 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:26:06,491 [DEBUG]    utils.py.debug_sql [128] -- (0.062) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:26:06,569 [DEBUG]    utils.py.debug_sql [128] -- (0.079) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:26:38,351 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:26:38,526 [DEBUG]    utils.py.debug_sql [128] -- (0.172) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:27:30,251 [DEBUG]    utils.py.debug_sql [128] -- (0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:27:30,331 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:28:33,048 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:28:33,124 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:28:50,195 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:28:50,273 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:29:16,969 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:29:17,047 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:31:58,110 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:31:58,186 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:32:20,450 [DEBUG]    utils.py.debug_sql [128] -- (0.063) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:32:20,534 [DEBUG]    utils.py.debug_sql [128] -- (0.093) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:32:43,150 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:32:43,224 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:32:55,278 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:32:55,360 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:33:08,838 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:33:08,915 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:38:09,746 [DEBUG]    utils.py.debug_sql [128] -- (0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:38:09,826 [DEBUG]    utils.py.debug_sql [128] -- (0.079) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:38:39,244 [DEBUG]    utils.py.debug_sql [128] -- (0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:38:39,325 [DEBUG]    utils.py.debug_sql [128] -- (0.079) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:42:20,724 [DEBUG]    utils.py.debug_sql [128] -- (0.063) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:42:20,811 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 09:47:47,186 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 09:47:47,271 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 09:48:34,971 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 09:48:35,058 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 09:48:35,104 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 09:48:35,191 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 09:49:52,162 [DEBUG]    utils.py.debug_sql [128] -- (0.062) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 09:49:52,246 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 09:49:52,295 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 09:49:52,378 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 09:50:23,723 [DEBUG]    utils.py.debug_sql [128] -- (0.063) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 09:50:23,815 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 09:50:23,861 [DEBUG]    utils.py.debug_sql [128] -- (0.031) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 09:50:24,025 [DEBUG]    utils.py.debug_sql [128] -- (0.157) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 09:50:24,176 [DEBUG]    utils.py.debug_sql [128] -- (0.156) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 09:50:24,266 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 09:50:46,399 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 09:50:46,485 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 09:50:46,542 [DEBUG]    utils.py.debug_sql [128] -- (0.062) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 09:50:46,629 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 09:50:46,678 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 09:50:46,765 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 09:54:54,825 [DEBUG]    utils.py.debug_sql [128] -- (0.063) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类2; args=('测试产品关注类2',)
2023-10-18 09:57:28,982 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类2; args=('测试产品关注类2',)
2023-10-18 09:57:29,074 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类2; args=('测试产品关注类2',)
2023-10-18 09:57:29,127 [DEBUG]    utils.py.debug_sql [128] -- (0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类2; args=('测试产品关注类2',)
2023-10-18 09:57:29,211 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类2; args=('测试产品关注类2',)
2023-10-18 09:57:29,257 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类2; args=('测试产品关注类2',)
2023-10-18 09:57:29,339 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类2; args=('测试产品关注类2',)
2023-10-18 10:06:38,745 [DEBUG]    utils.py.debug_sql [128] -- (0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类2; args=('测试产品关注类2',)
2023-10-18 10:06:38,830 [DEBUG]    utils.py.debug_sql [128] -- (0.079) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类2; args=('测试产品关注类2',)
2023-10-18 10:06:38,880 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类2; args=('测试产品关注类2',)
2023-10-18 10:06:38,963 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类2; args=('测试产品关注类2',)
2023-10-18 10:06:39,014 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类2; args=('测试产品关注类2',)
2023-10-18 10:06:39,097 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类2; args=('测试产品关注类2',)
2023-10-18 10:08:17,245 [DEBUG]    utils.py.debug_sql [128] -- (0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类2; args=('测试产品关注类2',)
2023-10-18 10:08:17,330 [DEBUG]    utils.py.debug_sql [128] -- (0.079) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类2; args=('测试产品关注类2',)
2023-10-18 10:11:25,635 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类3; args=('测试产品关注类3',)
2023-10-18 10:11:25,720 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类3; args=('测试产品关注类3',)
2023-10-18 10:14:50,262 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类3; args=('测试产品关注类3',)
2023-10-18 10:14:50,348 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类3; args=('测试产品关注类3',)
2023-10-18 10:15:56,441 [DEBUG]    utils.py.debug_sql [128] -- (0.063) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类12; args=('测试产品关注类12',)
2023-10-18 10:15:56,525 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类12; args=('测试产品关注类12',)
2023-10-18 10:16:44,085 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类3 ; args=('测试产品关注类3 ',)
2023-10-18 10:16:44,170 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类3 ; args=('测试产品关注类3 ',)
2023-10-18 13:47:42,605 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 13:47:42,690 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 13:48:45,354 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 13:48:45,439 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 13:49:01,199 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 13:49:01,283 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 13:49:16,024 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 13:49:16,112 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 13:49:34,564 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 13:49:34,650 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 13:51:19,666 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 13:51:19,750 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 13:52:27,021 [DEBUG]    utils.py.debug_sql [128] -- (0.063) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 13:52:27,105 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 13:53:25,792 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 13:53:25,876 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:04:55,649 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:04:55,733 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:05:39,936 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:05:40,020 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:10:33,855 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:10:33,956 [DEBUG]    utils.py.debug_sql [128] -- (0.109) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:10:45,794 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:10:45,885 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:11:17,749 [DEBUG]    utils.py.debug_sql [128] -- (0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:11:17,834 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:15:03,669 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:15:03,755 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:15:34,023 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:15:34,107 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:15:49,174 [DEBUG]    utils.py.debug_sql [128] -- (0.063) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:15:49,258 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:16:11,664 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:16:11,750 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:16:58,499 [DEBUG]    utils.py.debug_sql [128] -- (0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:16:58,583 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:17:07,941 [DEBUG]    utils.py.debug_sql [128] -- (0.063) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:17:08,027 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:17:22,458 [DEBUG]    utils.py.debug_sql [128] -- (0.062) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:17:22,543 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:24:48,744 [DEBUG]    utils.py.debug_sql [128] -- (0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:24:48,907 [DEBUG]    utils.py.debug_sql [128] -- (0.157) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:25:15,369 [DEBUG]    utils.py.debug_sql [128] -- (0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:25:15,455 [DEBUG]    utils.py.debug_sql [128] -- (0.079) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:26:21,440 [DEBUG]    utils.py.debug_sql [128] -- (0.063) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:26:21,525 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:27:09,969 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:27:10,051 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:29:10,105 [DEBUG]    utils.py.debug_sql [128] -- (0.125) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:29:10,194 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:29:31,870 [DEBUG]    utils.py.debug_sql [128] -- (0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:29:31,964 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:29:45,173 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:29:45,265 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:29:54,314 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:29:54,400 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:30:30,387 [DEBUG]    utils.py.debug_sql [128] -- (0.125) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:30:30,491 [DEBUG]    utils.py.debug_sql [128] -- (0.109) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:30:54,790 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:30:54,879 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:31:03,935 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:31:04,021 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:32:03,116 [DEBUG]    utils.py.debug_sql [128] -- (0.062) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:32:03,211 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:33:50,891  [DEBUG] 29640    [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:33:50,977  [DEBUG] 29640    [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:34:21,618  [DEBUG]  25016    [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:34:21,700  [DEBUG]  25016    [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.079) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:35:04,937 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:35:05,023 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:35:49,869 [DEBUG]    utils.py.debug_sql [128] -- (0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:35:49,955 [DEBUG]    utils.py.debug_sql [128] -- (0.079) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:37:14,127 [DEBUG]    utils.py.debug_sql [128] -- (0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:37:14,211 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类1; args=('测试产品关注类1',)
2023-10-18 14:37:43,565 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = cesghi ; args=('cesghi ',)
2023-10-18 14:37:43,658 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = cesghi ; args=('cesghi ',)
2023-10-18 14:38:05,604 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceceshi; args=('ceceshi',)
2023-10-18 14:38:05,689 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceceshi; args=('ceceshi',)
2023-10-18 14:38:55,603 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceceshi; args=('ceceshi',)
2023-10-18 14:38:55,692 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceceshi; args=('ceceshi',)
2023-10-18 14:39:23,137 [DEBUG]    utils.py.debug_sql [128] -- (0.062) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceceshi; args=('ceceshi',)
2023-10-18 14:39:23,227 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceceshi; args=('ceceshi',)
2023-10-18 14:39:38,272 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceceshi; args=('ceceshi',)
2023-10-18 14:39:38,357 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceceshi; args=('ceceshi',)
2023-10-18 14:39:53,999 [DEBUG]    utils.py.debug_sql [128] -- (0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceceshi; args=('ceceshi',)
2023-10-18 14:39:54,095 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceceshi; args=('ceceshi',)
2023-10-18 14:40:49,606 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceceshi; args=('ceceshi',)
2023-10-18 14:40:49,693 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceceshi; args=('ceceshi',)
2023-10-18 14:41:28,622 [DEBUG]    utils.py.debug_sql [128] -- (0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceceshi; args=('ceceshi',)
2023-10-18 14:41:28,707 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceceshi; args=('ceceshi',)
2023-10-18 14:41:38,284 [DEBUG]    utils.py.debug_sql [128] -- (0.062) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceceshi; args=('ceceshi',)
2023-10-18 14:41:38,369 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceceshi; args=('ceceshi',)
2023-10-18 14:41:52,230 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceceshi; args=('ceceshi',)
2023-10-18 14:41:52,314 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceceshi; args=('ceceshi',)
2023-10-18 14:42:11,020 [DEBUG]    utils.py.debug_sql [128] -- (0.063) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceceshi; args=('ceceshi',)
2023-10-18 14:42:11,110 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceceshi; args=('ceceshi',)
2023-10-18 14:45:53,120 [DEBUG]    utils.py.debug_sql [128] -- (0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:45:53,204 [DEBUG]    utils.py.debug_sql [128] -- (0.079) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:46:18,491 [DEBUG]    utils.py.debug_sql [128] -- (0.062) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:46:18,584 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:46:48,134 [DEBUG]    utils.py.debug_sql [128] -- (0.062) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:46:48,221 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:47:12,348 [DEBUG]    utils.py.debug_sql [128] -- (0.063) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:47:12,432 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:47:25,670 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:47:25,762 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:53:00,866 [DEBUG]    utils.py.debug_sql [128] -- (0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:53:00,952 [DEBUG]    utils.py.debug_sql [128] -- (0.079) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:53:32,734 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:53:32,820 [DEBUG]    utils.py.debug_sql [128] -- (0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:53:55,689 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:53:55,776 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:54:06,973 [DEBUG]    utils.py.debug_sql [128] -- (0.063) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:54:07,056 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:54:26,277 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:54:26,362 [DEBUG]    utils.py.debug_sql [128] -- (0.093) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:54:37,661 [DEBUG]    utils.py.debug_sql [128] -- (0.062) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:54:37,747 [DEBUG]    utils.py.debug_sql [128] -- (0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:55:41,052 [DEBUG]   utils.py. debug_sql[ 128]|(0.063) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:55:41,135 [DEBUG]   utils.py. debug_sql[ 128]|(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:57:20,401 [DEBUG]    utils.py.debug_sql [128] -- (0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:57:20,493 [DEBUG]    utils.py.debug_sql [128] -- (0.093) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:57:39,747 [DEBUG]   utils.py. debug_sql[ 128]|(0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:57:39,820 [DEBUG]   utils.py. debug_sql[ 128]|(0.079) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:57:59,742 [DEBUG] utils.py  . debug_sql[ 128]|(0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:57:59,825 [DEBUG] utils.py  . debug_sql[ 128]|(0.079) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:58:12,560 [DEBUG] utils.py  . debug_sql[ 128]|(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:58:12,644 [DEBUG] utils.py  . debug_sql[ 128]|(0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:58:44,832 [DEBUG] utils.py  . debug_sql[ 128]|(0.062) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:58:44,916 [DEBUG] utils.py  . debug_sql[ 128]|(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:59:13,148 [DEBUG] utils.py  . debug_sql[ 128]|(0.063) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:59:13,230 [DEBUG] utils.py  . debug_sql[ 128]|(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:59:32,526 [DEBUG] utils.py  . debug_sql[ 128]|(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:59:32,612 [DEBUG] utils.py  . debug_sql[ 128]|(0.093) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:59:57,619 [DEBUG] utils.py  . debug_sql[ 128]|(0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 14:59:57,712 [DEBUG] utils.py  . debug_sql[ 128]|(0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:00:26,261 [DEBUG] utils.py  . debug_sql[ 128]|(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:00:26,345 [DEBUG] utils.py  . debug_sql[ 128]|(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:00:46,996 [DEBUG] utils.py   - debug_sql [128]--:(0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:00:47,080 [DEBUG] utils.py   - debug_sql [128]--:(0.079) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:01:35,466 [DEBUG] utils.py   - debug_sql [128]--:(0.062) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:01:35,554 [DEBUG] utils.py   - debug_sql [128]--:(0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:01:50,886 [DEBUG] utils.py   - debug_sql [128]--:(0.031) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE "COUNTERPARTY_ORG"."CORPORATE_NAME" IS NULL; args=()
2023-10-18 15:01:50,930 [DEBUG] utils.py   - debug_sql [128]--:(0.047) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME" IS NULL; args=()
2023-10-18 15:01:54,214 [DEBUG] utils.py   - debug_sql [128]--:(0.031) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE "COUNTERPARTY_ORG"."CORPORATE_NAME" IS NULL; args=()
2023-10-18 15:01:54,245 [DEBUG] utils.py   - debug_sql [128]--:(0.031) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME" IS NULL; args=()
2023-10-18 15:01:59,106 [DEBUG] utils.py   - debug_sql [128]--:(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:01:59,193 [DEBUG] utils.py   - debug_sql [128]--:(0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:02:39,480 [DEBUG] utils.py   - debug_sql [128]--:(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:02:39,562 [DEBUG] utils.py   - debug_sql [128]--:(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:02:58,124 DEBUG  [utils.py  ]  debug_sql [128] --:(0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:02:58,208 DEBUG  [utils.py  ]  debug_sql [128] --:(0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:03:16,364 DEBUG  [utils.py  ]  debug_sql [128] --:(0.062) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:03:16,452 DEBUG  [utils.py  ]  debug_sql [128] --:(0.079) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:03:33,185 DEBUG  [utils.py  ]  debug_sql [128] --:(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:03:33,274 DEBUG  [utils.py  ]  debug_sql [128] --:(0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:08:28,186 DEBUG  [utils.py  ]  debug_sql [128] --:(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:08:28,269 DEBUG  [utils.py  ]  debug_sql [128] --:(0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:08:50,512 DEBUG   [utils.py  ] - debug_sql  [128] --:(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:08:50,596 DEBUG   [utils.py  ] - debug_sql  [128] --:(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:10:30,770  [DEBUG] 26636    [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.063) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:10:30,864  [DEBUG] 26636    [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.093) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:11:03,443  [DEBUG] 18904   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.063) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:11:03,526  [DEBUG] 18904   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:11:18,282  [DEBUG] 28232   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:11:18,368  [DEBUG] 28232   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.093) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:11:27,806  [DEBUG]  28432   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:11:27,893  [DEBUG]  28432   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:11:41,182  [DEBUG]  12824   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:11:41,267  [DEBUG]  12824   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:11:58,563  [DEBUG]  19564   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:11:58,650  [DEBUG]  19564   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:12:32,923  [DEBUG]  29008   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:12:33,008  [DEBUG]  29008   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:12:47,028  [DEBUG]  3952   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:12:47,112  [DEBUG]  3952   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.093) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:14:06,307  [DEBUG]  3736   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:14:06,388  [DEBUG]  3736   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:14:17,255  [DEBUG]  3636   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.062) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:14:17,341  [DEBUG]  3636   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:14:49,368  [DEBUG]  16164   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:14:49,450  [DEBUG]  16164   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.079) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:15:05,905  [DEBUG]  26872   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:15:05,989  [DEBUG]  26872   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.093) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:15:36,002  [DEBUG]             2036   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:15:36,090  [DEBUG]             2036   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:16:06,181  [DEBUG]  21072     [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:16:06,268  [DEBUG]  21072     [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:17:01,088  [DEBUG]  17972   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:17:01,172  [DEBUG]  17972   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:18:26,676  [DEBUG]  15412   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.063) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:18:26,760  [DEBUG]  15412   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:19:28,167  [DEBUG]  22940   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:19:28,251  [DEBUG]  22940   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:19:57,724  [DEBUG]  22928   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py                                   [128] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:19:57,810  [DEBUG]  22928   [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py                                   [128] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:20:23,451  [DEBUG]  6884    [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:20:23,531  [DEBUG]  6884    [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py  [128] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:20:45,814  [DEBUG]  6616    [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py          [128] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:20:45,896  [DEBUG]  6616    [MainThread] -D:\djangoProject\venv\lib\site-packages\django\db\backends\utils.py          [128] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:22:20,804  [DEBUG]  28684   [MainThread] -utils                 [128] :(0.063) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:22:20,888  [DEBUG]  28684   [MainThread] -utils                 [128] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:22:55,295  [DEBUG]  24048   [MainThread] -utils       [128] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:22:55,379  [DEBUG]  24048   [MainThread] -utils       [128] :(0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = ceshi1; args=('ceshi1',)
2023-10-18 15:25:56,866  [DEBUG]  utils.py.debug_sql [MainThread] -utils       [128] :(0.062) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 123123; args=('123123',)
2023-10-18 15:25:56,951  [DEBUG]  utils.py.debug_sql [MainThread] -utils       [128] :(0.079) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 123123; args=('123123',)
2023-10-18 15:26:50,949  [DEBUG]  utils.py.debug_sql   [128] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 123123; args=('123123',)
2023-10-18 15:26:51,034  [DEBUG]  utils.py.debug_sql   [128] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 123123; args=('123123',)
2023-10-18 15:27:37,068  [DEBUG]  utils.py  .debug_sql              [128] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 123123; args=('123123',)
2023-10-18 15:27:37,156  [DEBUG]  utils.py  .debug_sql              [128] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 123123; args=('123123',)
2023-10-18 15:28:05,268  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 123123; args=('123123',)
2023-10-18 15:28:05,358  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 123123; args=('123123',)
2023-10-18 15:39:39,803  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "AUSER"."USERID", "AUSER"."USERNAME", "AUSER"."ADMINID", "AUSER"."ORGID", "AUSER"."PASSWORD", "AUSER"."STAMPPASSWORD", "AUSER"."USERLEVEL", "AUSER"."ISLEADER", "AUSER"."EXPIREDDATE", "AUSER"."EXPIRED", "AUSER"."LOGINTIME", "AUSER"."LOGINIP", "AUSER"."LASTTIME", "AUSER"."LASTIP", "AUSER"."SKIN", "AUSER"."IPCONFIG", "AUSER"."LANGCODE", "AUSER"."USERTYPE", "AUSER"."POSTID", "AUSER"."SEX", "AUSER"."BIRTHDAY", "AUSER"."IDCARD", "AUSER"."SCHOOL", "AUSER"."GRADUATION", "AUSER"."DEGREE", "AUSER"."MAJOR", "AUSER"."COUNTRY", "AUSER"."PROVINCE", "AUSER"."CITY", "AUSER"."ADDRESS", "AUSER"."POSTCODE", "AUSER"."PHONE", "AUSER"."FAX", "AUSER"."MOBILE", "AUSER"."EMAIL", "AUSER"."REMARK", "AUSER"."CREATOR", "AUSER"."CREATETIME", "AUSER"."MODIFIER", "AUSER"."MODIFYTIME", "AUSER"."ERPID", "AUSER"."SUPERIORLEADER", "AUSER"."POST" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨 FETCH FIRST 21 ROWS ONLY; args=('孙滨',)
2023-10-18 15:40:20,912  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "AUSER"."USERID", "AUSER"."USERNAME", "AUSER"."ADMINID", "AUSER"."ORGID", "AUSER"."PASSWORD", "AUSER"."STAMPPASSWORD", "AUSER"."USERLEVEL", "AUSER"."ISLEADER", "AUSER"."EXPIREDDATE", "AUSER"."EXPIRED", "AUSER"."LOGINTIME", "AUSER"."LOGINIP", "AUSER"."LASTTIME", "AUSER"."LASTIP", "AUSER"."SKIN", "AUSER"."IPCONFIG", "AUSER"."LANGCODE", "AUSER"."USERTYPE", "AUSER"."POSTID", "AUSER"."SEX", "AUSER"."BIRTHDAY", "AUSER"."IDCARD", "AUSER"."SCHOOL", "AUSER"."GRADUATION", "AUSER"."DEGREE", "AUSER"."MAJOR", "AUSER"."COUNTRY", "AUSER"."PROVINCE", "AUSER"."CITY", "AUSER"."ADDRESS", "AUSER"."POSTCODE", "AUSER"."PHONE", "AUSER"."FAX", "AUSER"."MOBILE", "AUSER"."EMAIL", "AUSER"."REMARK", "AUSER"."CREATOR", "AUSER"."CREATETIME", "AUSER"."MODIFIER", "AUSER"."MODIFYTIME", "AUSER"."ERPID", "AUSER"."SUPERIORLEADER", "AUSER"."POST" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨 FETCH FIRST 21 ROWS ONLY; args=('孙滨',)
2023-10-18 15:40:44,693  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "AUSER"."USERID", "AUSER"."USERNAME", "AUSER"."ADMINID", "AUSER"."ORGID", "AUSER"."PASSWORD", "AUSER"."STAMPPASSWORD", "AUSER"."USERLEVEL", "AUSER"."ISLEADER", "AUSER"."EXPIREDDATE", "AUSER"."EXPIRED", "AUSER"."LOGINTIME", "AUSER"."LOGINIP", "AUSER"."LASTTIME", "AUSER"."LASTIP", "AUSER"."SKIN", "AUSER"."IPCONFIG", "AUSER"."LANGCODE", "AUSER"."USERTYPE", "AUSER"."POSTID", "AUSER"."SEX", "AUSER"."BIRTHDAY", "AUSER"."IDCARD", "AUSER"."SCHOOL", "AUSER"."GRADUATION", "AUSER"."DEGREE", "AUSER"."MAJOR", "AUSER"."COUNTRY", "AUSER"."PROVINCE", "AUSER"."CITY", "AUSER"."ADDRESS", "AUSER"."POSTCODE", "AUSER"."PHONE", "AUSER"."FAX", "AUSER"."MOBILE", "AUSER"."EMAIL", "AUSER"."REMARK", "AUSER"."CREATOR", "AUSER"."CREATETIME", "AUSER"."MODIFIER", "AUSER"."MODIFYTIME", "AUSER"."ERPID", "AUSER"."SUPERIORLEADER", "AUSER"."POST" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨 FETCH FIRST 21 ROWS ONLY; args=('孙滨',)
2023-10-18 15:51:41,766  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "AUSER"."USERID", "AUSER"."USERNAME", "AUSER"."ADMINID", "AUSER"."ORGID", "AUSER"."PASSWORD", "AUSER"."STAMPPASSWORD", "AUSER"."USERLEVEL", "AUSER"."ISLEADER", "AUSER"."EXPIREDDATE", "AUSER"."EXPIRED", "AUSER"."LOGINTIME", "AUSER"."LOGINIP", "AUSER"."LASTTIME", "AUSER"."LASTIP", "AUSER"."SKIN", "AUSER"."IPCONFIG", "AUSER"."LANGCODE", "AUSER"."USERTYPE", "AUSER"."POSTID", "AUSER"."SEX", "AUSER"."BIRTHDAY", "AUSER"."IDCARD", "AUSER"."SCHOOL", "AUSER"."GRADUATION", "AUSER"."DEGREE", "AUSER"."MAJOR", "AUSER"."COUNTRY", "AUSER"."PROVINCE", "AUSER"."CITY", "AUSER"."ADDRESS", "AUSER"."POSTCODE", "AUSER"."PHONE", "AUSER"."FAX", "AUSER"."MOBILE", "AUSER"."EMAIL", "AUSER"."REMARK", "AUSER"."CREATOR", "AUSER"."CREATETIME", "AUSER"."MODIFIER", "AUSER"."MODIFYTIME", "AUSER"."ERPID", "AUSER"."SUPERIORLEADER", "AUSER"."POST" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨 FETCH FIRST 21 ROWS ONLY; args=('孙滨',)
2023-10-18 15:52:16,733  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "AUSER"."USERID", "AUSER"."USERNAME", "AUSER"."ADMINID", "AUSER"."ORGID", "AUSER"."PASSWORD", "AUSER"."STAMPPASSWORD", "AUSER"."USERLEVEL", "AUSER"."ISLEADER", "AUSER"."EXPIREDDATE", "AUSER"."EXPIRED", "AUSER"."LOGINTIME", "AUSER"."LOGINIP", "AUSER"."LASTTIME", "AUSER"."LASTIP", "AUSER"."SKIN", "AUSER"."IPCONFIG", "AUSER"."LANGCODE", "AUSER"."USERTYPE", "AUSER"."POSTID", "AUSER"."SEX", "AUSER"."BIRTHDAY", "AUSER"."IDCARD", "AUSER"."SCHOOL", "AUSER"."GRADUATION", "AUSER"."DEGREE", "AUSER"."MAJOR", "AUSER"."COUNTRY", "AUSER"."PROVINCE", "AUSER"."CITY", "AUSER"."ADDRESS", "AUSER"."POSTCODE", "AUSER"."PHONE", "AUSER"."FAX", "AUSER"."MOBILE", "AUSER"."EMAIL", "AUSER"."REMARK", "AUSER"."CREATOR", "AUSER"."CREATETIME", "AUSER"."MODIFIER", "AUSER"."MODIFYTIME", "AUSER"."ERPID", "AUSER"."SUPERIORLEADER", "AUSER"."POST" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨 FETCH FIRST 21 ROWS ONLY; args=('孙滨',)
2023-10-18 15:53:59,290  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "AUSER"."USERID", "AUSER"."USERNAME", "AUSER"."ADMINID", "AUSER"."ORGID", "AUSER"."PASSWORD", "AUSER"."STAMPPASSWORD", "AUSER"."USERLEVEL", "AUSER"."ISLEADER", "AUSER"."EXPIREDDATE", "AUSER"."EXPIRED", "AUSER"."LOGINTIME", "AUSER"."LOGINIP", "AUSER"."LASTTIME", "AUSER"."LASTIP", "AUSER"."SKIN", "AUSER"."IPCONFIG", "AUSER"."LANGCODE", "AUSER"."USERTYPE", "AUSER"."POSTID", "AUSER"."SEX", "AUSER"."BIRTHDAY", "AUSER"."IDCARD", "AUSER"."SCHOOL", "AUSER"."GRADUATION", "AUSER"."DEGREE", "AUSER"."MAJOR", "AUSER"."COUNTRY", "AUSER"."PROVINCE", "AUSER"."CITY", "AUSER"."ADDRESS", "AUSER"."POSTCODE", "AUSER"."PHONE", "AUSER"."FAX", "AUSER"."MOBILE", "AUSER"."EMAIL", "AUSER"."REMARK", "AUSER"."CREATOR", "AUSER"."CREATETIME", "AUSER"."MODIFIER", "AUSER"."MODIFYTIME", "AUSER"."ERPID", "AUSER"."SUPERIORLEADER", "AUSER"."POST" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨 FETCH FIRST 21 ROWS ONLY; args=('孙滨',)
2023-10-18 16:14:48,485  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨 FETCH FIRST 1 ROWS ONLY; args=('孙滨',)
2023-10-18 16:15:13,292  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.640) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 16:15:35,516  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.609) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 16:16:06,488  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.640) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 16:16:43,941  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.610) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 16:17:20,578  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨 FETCH FIRST 1 ROWS ONLY; args=('孙滨',)
2023-10-18 16:17:33,357  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨 FETCH FIRST 1 ROWS ONLY; args=('孙滨',)
2023-10-18 16:19:21,485  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.625) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 16:22:08,003  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.641) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 16:23:26,217  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.703) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 16:25:18,323  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.610) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 16:25:35,326  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.594) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 16:25:35,390  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5 FETCH FIRST 1 ROWS ONLY; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 16:26:30,752  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.734) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 16:26:30,930  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.172) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 16:27:42,039  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.609) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 16:28:04,300  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.625) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 16:28:07,664  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.609) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 16:28:15,497  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.609) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 16:29:56,947  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.610) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 16:30:21,144  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.610) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 16:30:36,170  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.593) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 16:30:49,467  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.625) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 16:31:08,880  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.609) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 16:31:08,942  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5 FETCH FIRST 21 ROWS ONLY; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 16:32:11,718  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.656) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 16:32:11,873  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.156) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 16:32:25,318  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.610) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 16:32:25,461  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.140) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 16:33:52,976  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.735) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 16:34:19,605  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨 FETCH FIRST 1 ROWS ONLY; args=('孙滨',)
2023-10-18 16:35:19,707  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.609) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 16:35:19,853  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.141) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 16:35:53,315  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.625) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 16:35:53,471  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.140) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 16:36:59,175  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.609) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 16:36:59,327  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.141) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 17:13:43,532  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 17:13:43,618  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.093) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 17:13:44,282  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.610) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 17:13:44,427  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.156) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 17:13:44,490  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 17:15:10,264  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 17:15:10,342  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 17:15:10,993  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.609) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 17:15:11,136  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.141) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 17:15:11,190  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 17:15:55,257  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 17:15:55,333  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 17:15:56,007  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.625) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 17:15:56,155  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.141) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 17:15:56,215  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 17:16:14,005  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 17:16:14,079  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 17:16:14,729  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.594) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 17:16:14,873  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.140) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 17:16:14,931  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 17:16:56,893  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 17:16:56,980  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 17:16:57,653  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.625) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 17:16:57,803  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.156) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 17:16:57,862  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 17:17:27,107  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 17:17:27,187  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 17:17:27,966  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.719) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 17:17:28,141  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.172) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 17:17:28,201  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 17:17:36,780  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.032) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE "COUNTERPARTY_ORG"."CORPORATE_NAME" IS NULL; args=()
2023-10-18 17:17:36,811  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.031) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME" IS NULL; args=()
2023-10-18 17:17:44,941  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 17:17:45,021  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 17:17:45,683  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.609) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 17:17:45,826  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.141) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 17:17:45,883  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 18:17:36,280  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:17:36,355  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:17:37,006  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.609) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 18:17:37,153  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.141) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 18:17:37,222  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 18:17:37,474  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.219) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:17:37,823  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.313) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:17:37,946  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:17:57,487  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:17:57,564  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:17:58,222  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.610) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 18:17:58,367  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.140) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 18:17:58,424  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 18:17:58,663  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.203) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:17:58,978  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.281) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:17:59,101  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:17:59,194  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:17:59,313  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 18:17:59,367  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 18:18:30,038  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:18:30,115  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:18:30,768  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.594) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 18:18:30,911  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.156) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 18:18:30,967  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 18:18:31,203  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.204) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:18:31,514  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.281) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:18:31,634  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:18:31,722  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:18:31,839  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 18:18:31,885  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 18:18:31,972  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) SELECT "COUNTERPARTY_ORG"."ID", "COUNTERPARTY_ORG"."CORPORATE_NAME", "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE", "COUNTERPARTY_ORG"."ID_KIND", "COUNTERPARTY_ORG"."SECONDRAY_TRADER_CLIENT", "COUNTERPARTY_ORG"."SECONDRAY_TRADER", "COUNTERPARTY_ORG"."INDUSTRY", "COUNTERPARTY_ORG"."SCOPE_BUSINESS", "COUNTERPARTY_ORG"."LIST_ATTRIBUTE", "COUNTERPARTY_ORG"."START_DATE", "COUNTERPARTY_ORG"."END_DATE", "COUNTERPARTY_ORG"."CAPITAL_ATTRIBUTE", "COUNTERPARTY_ORG"."NATURE", "COUNTERPARTY_ORG"."APTITUDE", "COUNTERPARTY_ORG"."NONTAXRESIDENT", "COUNTERPARTY_ORG"."REGISTER_COUNTRY", "COUNTERPARTY_ORG"."REGISTERED_ADDRESS", "COUNTERPARTY_ORG"."OFFICE_ADDRESS", "COUNTERPARTY_ORG"."SETUP_DATE", "COUNTERPARTY_ORG"."REGISTERED_CAPITAL", "COUNTERPARTY_ORG"."CLIENT_TYPE", "COUNTERPARTY_ORG"."CREATE_TIME", "COUNTERPARTY_ORG"."CREATE_BY", "COUNTERPARTY_ORG"."UPDATE_TIME", "COUNTERPARTY_ORG"."UPDATE_BY", "COUNTERPARTY_ORG"."AUDIT_STATUS", "COUNTERPARTY_ORG"."ORGAN_TYPE", "COUNTERPARTY_ORG"."INTRODUCTION_DEPARTMENT", "COUNTERPARTY_ORG"."CUSTOMER_MANAGER", "COUNTERPARTY_ORG"."AML_MONITOR_FLAG", "COUNTERPARTY_ORG"."LASTEST_CLIENT_ID", "COUNTERPARTY_ORG"."CONCERN_FLAG", "COUNTERPARTY_ORG"."REGISTER_PROVINCE", "COUNTERPARTY_ORG"."REGISTER_CITY", "COUNTERPARTY_ORG"."ISSUING_DATE", "COUNTERPARTY_ORG"."BIG_CLIENT" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类 FETCH FIRST 21 ROWS ONLY; args=('测试产品关注类',)
2023-10-18 18:18:54,734  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:18:54,811  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:18:55,470  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.609) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 18:18:55,617  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.156) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 18:18:55,674  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 18:18:55,909  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.203) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:18:56,219  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.281) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:18:56,340  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:18:56,426  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:18:56,545  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 18:18:56,592  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 18:18:56,654  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "COUNTERPARTY_ORG"."ID", "COUNTERPARTY_ORG"."CORPORATE_NAME", "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE", "COUNTERPARTY_ORG"."ID_KIND", "COUNTERPARTY_ORG"."SECONDRAY_TRADER_CLIENT", "COUNTERPARTY_ORG"."SECONDRAY_TRADER", "COUNTERPARTY_ORG"."INDUSTRY", "COUNTERPARTY_ORG"."SCOPE_BUSINESS", "COUNTERPARTY_ORG"."LIST_ATTRIBUTE", "COUNTERPARTY_ORG"."START_DATE", "COUNTERPARTY_ORG"."END_DATE", "COUNTERPARTY_ORG"."CAPITAL_ATTRIBUTE", "COUNTERPARTY_ORG"."NATURE", "COUNTERPARTY_ORG"."APTITUDE", "COUNTERPARTY_ORG"."NONTAXRESIDENT", "COUNTERPARTY_ORG"."REGISTER_COUNTRY", "COUNTERPARTY_ORG"."REGISTERED_ADDRESS", "COUNTERPARTY_ORG"."OFFICE_ADDRESS", "COUNTERPARTY_ORG"."SETUP_DATE", "COUNTERPARTY_ORG"."REGISTERED_CAPITAL", "COUNTERPARTY_ORG"."CLIENT_TYPE", "COUNTERPARTY_ORG"."CREATE_TIME", "COUNTERPARTY_ORG"."CREATE_BY", "COUNTERPARTY_ORG"."UPDATE_TIME", "COUNTERPARTY_ORG"."UPDATE_BY", "COUNTERPARTY_ORG"."AUDIT_STATUS", "COUNTERPARTY_ORG"."ORGAN_TYPE", "COUNTERPARTY_ORG"."INTRODUCTION_DEPARTMENT", "COUNTERPARTY_ORG"."CUSTOMER_MANAGER", "COUNTERPARTY_ORG"."AML_MONITOR_FLAG", "COUNTERPARTY_ORG"."LASTEST_CLIENT_ID", "COUNTERPARTY_ORG"."CONCERN_FLAG", "COUNTERPARTY_ORG"."REGISTER_PROVINCE", "COUNTERPARTY_ORG"."REGISTER_CITY", "COUNTERPARTY_ORG"."ISSUING_DATE", "COUNTERPARTY_ORG"."BIG_CLIENT" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类 FETCH FIRST 21 ROWS ONLY; args=('测试产品关注类',)
2023-10-18 18:19:56,100  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:19:56,184  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:19:56,974  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.750) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 18:19:57,138  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.156) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 18:19:57,197  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 18:19:57,473  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.250) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:19:57,841  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.328) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:19:57,969  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:19:58,060  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:19:58,184  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 18:19:58,233  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 18:19:58,295  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "COUNTERPARTY_ORG"."ID", "COUNTERPARTY_ORG"."CORPORATE_NAME", "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE", "COUNTERPARTY_ORG"."ID_KIND", "COUNTERPARTY_ORG"."SECONDRAY_TRADER_CLIENT", "COUNTERPARTY_ORG"."SECONDRAY_TRADER", "COUNTERPARTY_ORG"."INDUSTRY", "COUNTERPARTY_ORG"."SCOPE_BUSINESS", "COUNTERPARTY_ORG"."LIST_ATTRIBUTE", "COUNTERPARTY_ORG"."START_DATE", "COUNTERPARTY_ORG"."END_DATE", "COUNTERPARTY_ORG"."CAPITAL_ATTRIBUTE", "COUNTERPARTY_ORG"."NATURE", "COUNTERPARTY_ORG"."APTITUDE", "COUNTERPARTY_ORG"."NONTAXRESIDENT", "COUNTERPARTY_ORG"."REGISTER_COUNTRY", "COUNTERPARTY_ORG"."REGISTERED_ADDRESS", "COUNTERPARTY_ORG"."OFFICE_ADDRESS", "COUNTERPARTY_ORG"."SETUP_DATE", "COUNTERPARTY_ORG"."REGISTERED_CAPITAL", "COUNTERPARTY_ORG"."CLIENT_TYPE", "COUNTERPARTY_ORG"."CREATE_TIME", "COUNTERPARTY_ORG"."CREATE_BY", "COUNTERPARTY_ORG"."UPDATE_TIME", "COUNTERPARTY_ORG"."UPDATE_BY", "COUNTERPARTY_ORG"."AUDIT_STATUS", "COUNTERPARTY_ORG"."ORGAN_TYPE", "COUNTERPARTY_ORG"."INTRODUCTION_DEPARTMENT", "COUNTERPARTY_ORG"."CUSTOMER_MANAGER", "COUNTERPARTY_ORG"."AML_MONITOR_FLAG", "COUNTERPARTY_ORG"."LASTEST_CLIENT_ID", "COUNTERPARTY_ORG"."CONCERN_FLAG", "COUNTERPARTY_ORG"."REGISTER_PROVINCE", "COUNTERPARTY_ORG"."REGISTER_CITY", "COUNTERPARTY_ORG"."ISSUING_DATE", "COUNTERPARTY_ORG"."BIG_CLIENT" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类 FETCH FIRST 21 ROWS ONLY; args=('测试产品关注类',)
2023-10-18 18:20:44,358  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:20:44,434  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:20:45,095  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.609) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 18:20:45,241  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.140) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 18:20:45,301  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 18:20:45,548  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.203) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:20:45,865  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.296) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:20:45,990  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.093) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:20:46,079  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:20:46,200  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.079) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 18:20:46,252  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.046) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 18:20:46,319  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "COUNTERPARTY_ORG"."ID", "COUNTERPARTY_ORG"."CORPORATE_NAME", "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE", "COUNTERPARTY_ORG"."ID_KIND", "COUNTERPARTY_ORG"."SECONDRAY_TRADER_CLIENT", "COUNTERPARTY_ORG"."SECONDRAY_TRADER", "COUNTERPARTY_ORG"."INDUSTRY", "COUNTERPARTY_ORG"."SCOPE_BUSINESS", "COUNTERPARTY_ORG"."LIST_ATTRIBUTE", "COUNTERPARTY_ORG"."START_DATE", "COUNTERPARTY_ORG"."END_DATE", "COUNTERPARTY_ORG"."CAPITAL_ATTRIBUTE", "COUNTERPARTY_ORG"."NATURE", "COUNTERPARTY_ORG"."APTITUDE", "COUNTERPARTY_ORG"."NONTAXRESIDENT", "COUNTERPARTY_ORG"."REGISTER_COUNTRY", "COUNTERPARTY_ORG"."REGISTERED_ADDRESS", "COUNTERPARTY_ORG"."OFFICE_ADDRESS", "COUNTERPARTY_ORG"."SETUP_DATE", "COUNTERPARTY_ORG"."REGISTERED_CAPITAL", "COUNTERPARTY_ORG"."CLIENT_TYPE", "COUNTERPARTY_ORG"."CREATE_TIME", "COUNTERPARTY_ORG"."CREATE_BY", "COUNTERPARTY_ORG"."UPDATE_TIME", "COUNTERPARTY_ORG"."UPDATE_BY", "COUNTERPARTY_ORG"."AUDIT_STATUS", "COUNTERPARTY_ORG"."ORGAN_TYPE", "COUNTERPARTY_ORG"."INTRODUCTION_DEPARTMENT", "COUNTERPARTY_ORG"."CUSTOMER_MANAGER", "COUNTERPARTY_ORG"."AML_MONITOR_FLAG", "COUNTERPARTY_ORG"."LASTEST_CLIENT_ID", "COUNTERPARTY_ORG"."CONCERN_FLAG", "COUNTERPARTY_ORG"."REGISTER_PROVINCE", "COUNTERPARTY_ORG"."REGISTER_CITY", "COUNTERPARTY_ORG"."ISSUING_DATE", "COUNTERPARTY_ORG"."BIG_CLIENT" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类 FETCH FIRST 21 ROWS ONLY; args=('测试产品关注类',)
2023-10-18 18:21:26,154  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:21:26,232  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:21:26,883  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.609) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 18:21:27,030  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.141) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 18:21:27,090  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 18:21:27,330  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.204) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:21:27,646  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.282) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:21:27,770  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:21:27,859  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:21:27,978  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 18:21:28,026  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 18:21:28,091  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "COUNTERPARTY_ORG"."ID", "COUNTERPARTY_ORG"."CORPORATE_NAME", "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE", "COUNTERPARTY_ORG"."ID_KIND", "COUNTERPARTY_ORG"."SECONDRAY_TRADER_CLIENT", "COUNTERPARTY_ORG"."SECONDRAY_TRADER", "COUNTERPARTY_ORG"."INDUSTRY", "COUNTERPARTY_ORG"."SCOPE_BUSINESS", "COUNTERPARTY_ORG"."LIST_ATTRIBUTE", "COUNTERPARTY_ORG"."START_DATE", "COUNTERPARTY_ORG"."END_DATE", "COUNTERPARTY_ORG"."CAPITAL_ATTRIBUTE", "COUNTERPARTY_ORG"."NATURE", "COUNTERPARTY_ORG"."APTITUDE", "COUNTERPARTY_ORG"."NONTAXRESIDENT", "COUNTERPARTY_ORG"."REGISTER_COUNTRY", "COUNTERPARTY_ORG"."REGISTERED_ADDRESS", "COUNTERPARTY_ORG"."OFFICE_ADDRESS", "COUNTERPARTY_ORG"."SETUP_DATE", "COUNTERPARTY_ORG"."REGISTERED_CAPITAL", "COUNTERPARTY_ORG"."CLIENT_TYPE", "COUNTERPARTY_ORG"."CREATE_TIME", "COUNTERPARTY_ORG"."CREATE_BY", "COUNTERPARTY_ORG"."UPDATE_TIME", "COUNTERPARTY_ORG"."UPDATE_BY", "COUNTERPARTY_ORG"."AUDIT_STATUS", "COUNTERPARTY_ORG"."ORGAN_TYPE", "COUNTERPARTY_ORG"."INTRODUCTION_DEPARTMENT", "COUNTERPARTY_ORG"."CUSTOMER_MANAGER", "COUNTERPARTY_ORG"."AML_MONITOR_FLAG", "COUNTERPARTY_ORG"."LASTEST_CLIENT_ID", "COUNTERPARTY_ORG"."CONCERN_FLAG", "COUNTERPARTY_ORG"."REGISTER_PROVINCE", "COUNTERPARTY_ORG"."REGISTER_CITY", "COUNTERPARTY_ORG"."ISSUING_DATE", "COUNTERPARTY_ORG"."BIG_CLIENT" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类 FETCH FIRST 21 ROWS ONLY; args=('测试产品关注类',)
2023-10-18 18:22:06,530  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:22:06,607  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:22:07,262  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.609) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 18:22:07,410  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.156) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 18:22:07,463  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 18:22:07,715  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.219) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:22:08,042  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.297) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:22:08,168  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.093) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:22:08,270  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:22:08,391  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 18:22:08,443  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 18:22:08,498  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.046) SELECT "COUNTERPARTY_ORG"."ID", "COUNTERPARTY_ORG"."CORPORATE_NAME", "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE", "COUNTERPARTY_ORG"."ID_KIND", "COUNTERPARTY_ORG"."SECONDRAY_TRADER_CLIENT", "COUNTERPARTY_ORG"."SECONDRAY_TRADER", "COUNTERPARTY_ORG"."INDUSTRY", "COUNTERPARTY_ORG"."SCOPE_BUSINESS", "COUNTERPARTY_ORG"."LIST_ATTRIBUTE", "COUNTERPARTY_ORG"."START_DATE", "COUNTERPARTY_ORG"."END_DATE", "COUNTERPARTY_ORG"."CAPITAL_ATTRIBUTE", "COUNTERPARTY_ORG"."NATURE", "COUNTERPARTY_ORG"."APTITUDE", "COUNTERPARTY_ORG"."NONTAXRESIDENT", "COUNTERPARTY_ORG"."REGISTER_COUNTRY", "COUNTERPARTY_ORG"."REGISTERED_ADDRESS", "COUNTERPARTY_ORG"."OFFICE_ADDRESS", "COUNTERPARTY_ORG"."SETUP_DATE", "COUNTERPARTY_ORG"."REGISTERED_CAPITAL", "COUNTERPARTY_ORG"."CLIENT_TYPE", "COUNTERPARTY_ORG"."CREATE_TIME", "COUNTERPARTY_ORG"."CREATE_BY", "COUNTERPARTY_ORG"."UPDATE_TIME", "COUNTERPARTY_ORG"."UPDATE_BY", "COUNTERPARTY_ORG"."AUDIT_STATUS", "COUNTERPARTY_ORG"."ORGAN_TYPE", "COUNTERPARTY_ORG"."INTRODUCTION_DEPARTMENT", "COUNTERPARTY_ORG"."CUSTOMER_MANAGER", "COUNTERPARTY_ORG"."AML_MONITOR_FLAG", "COUNTERPARTY_ORG"."LASTEST_CLIENT_ID", "COUNTERPARTY_ORG"."CONCERN_FLAG", "COUNTERPARTY_ORG"."REGISTER_PROVINCE", "COUNTERPARTY_ORG"."REGISTER_CITY", "COUNTERPARTY_ORG"."ISSUING_DATE", "COUNTERPARTY_ORG"."BIG_CLIENT" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:23:24,860  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:23:24,937  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:23:25,617  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.625) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 18:23:25,762  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.141) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 18:23:25,816  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 18:23:26,056  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.203) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:23:26,371  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.281) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:23:26,494  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.093) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:23:26,581  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:23:26,700  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.079) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 18:23:26,746  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.046) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 18:23:26,797  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."ID", "COUNTERPARTY_ORG"."CORPORATE_NAME", "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE", "COUNTERPARTY_ORG"."ID_KIND", "COUNTERPARTY_ORG"."SECONDRAY_TRADER_CLIENT", "COUNTERPARTY_ORG"."SECONDRAY_TRADER", "COUNTERPARTY_ORG"."INDUSTRY", "COUNTERPARTY_ORG"."SCOPE_BUSINESS", "COUNTERPARTY_ORG"."LIST_ATTRIBUTE", "COUNTERPARTY_ORG"."START_DATE", "COUNTERPARTY_ORG"."END_DATE", "COUNTERPARTY_ORG"."CAPITAL_ATTRIBUTE", "COUNTERPARTY_ORG"."NATURE", "COUNTERPARTY_ORG"."APTITUDE", "COUNTERPARTY_ORG"."NONTAXRESIDENT", "COUNTERPARTY_ORG"."REGISTER_COUNTRY", "COUNTERPARTY_ORG"."REGISTERED_ADDRESS", "COUNTERPARTY_ORG"."OFFICE_ADDRESS", "COUNTERPARTY_ORG"."SETUP_DATE", "COUNTERPARTY_ORG"."REGISTERED_CAPITAL", "COUNTERPARTY_ORG"."CLIENT_TYPE", "COUNTERPARTY_ORG"."CREATE_TIME", "COUNTERPARTY_ORG"."CREATE_BY", "COUNTERPARTY_ORG"."UPDATE_TIME", "COUNTERPARTY_ORG"."UPDATE_BY", "COUNTERPARTY_ORG"."AUDIT_STATUS", "COUNTERPARTY_ORG"."ORGAN_TYPE", "COUNTERPARTY_ORG"."INTRODUCTION_DEPARTMENT", "COUNTERPARTY_ORG"."CUSTOMER_MANAGER", "COUNTERPARTY_ORG"."AML_MONITOR_FLAG", "COUNTERPARTY_ORG"."LASTEST_CLIENT_ID", "COUNTERPARTY_ORG"."CONCERN_FLAG", "COUNTERPARTY_ORG"."REGISTER_PROVINCE", "COUNTERPARTY_ORG"."REGISTER_CITY", "COUNTERPARTY_ORG"."ISSUING_DATE", "COUNTERPARTY_ORG"."BIG_CLIENT" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:24:57,282  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:24:57,356  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:24:58,025  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.625) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 18:24:58,175  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.156) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 18:24:58,232  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 18:24:58,469  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.203) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:24:58,787  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.297) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:24:58,907  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:24:58,995  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:24:59,110  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 18:24:59,156  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 18:24:59,207  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "COUNTERPARTY_ORG"."ID", "COUNTERPARTY_ORG"."CORPORATE_NAME", "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE", "COUNTERPARTY_ORG"."ID_KIND", "COUNTERPARTY_ORG"."SECONDRAY_TRADER_CLIENT", "COUNTERPARTY_ORG"."SECONDRAY_TRADER", "COUNTERPARTY_ORG"."INDUSTRY", "COUNTERPARTY_ORG"."SCOPE_BUSINESS", "COUNTERPARTY_ORG"."LIST_ATTRIBUTE", "COUNTERPARTY_ORG"."START_DATE", "COUNTERPARTY_ORG"."END_DATE", "COUNTERPARTY_ORG"."CAPITAL_ATTRIBUTE", "COUNTERPARTY_ORG"."NATURE", "COUNTERPARTY_ORG"."APTITUDE", "COUNTERPARTY_ORG"."NONTAXRESIDENT", "COUNTERPARTY_ORG"."REGISTER_COUNTRY", "COUNTERPARTY_ORG"."REGISTERED_ADDRESS", "COUNTERPARTY_ORG"."OFFICE_ADDRESS", "COUNTERPARTY_ORG"."SETUP_DATE", "COUNTERPARTY_ORG"."REGISTERED_CAPITAL", "COUNTERPARTY_ORG"."CLIENT_TYPE", "COUNTERPARTY_ORG"."CREATE_TIME", "COUNTERPARTY_ORG"."CREATE_BY", "COUNTERPARTY_ORG"."UPDATE_TIME", "COUNTERPARTY_ORG"."UPDATE_BY", "COUNTERPARTY_ORG"."AUDIT_STATUS", "COUNTERPARTY_ORG"."ORGAN_TYPE", "COUNTERPARTY_ORG"."INTRODUCTION_DEPARTMENT", "COUNTERPARTY_ORG"."CUSTOMER_MANAGER", "COUNTERPARTY_ORG"."AML_MONITOR_FLAG", "COUNTERPARTY_ORG"."LASTEST_CLIENT_ID", "COUNTERPARTY_ORG"."CONCERN_FLAG", "COUNTERPARTY_ORG"."REGISTER_PROVINCE", "COUNTERPARTY_ORG"."REGISTER_CITY", "COUNTERPARTY_ORG"."ISSUING_DATE", "COUNTERPARTY_ORG"."BIG_CLIENT" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:25:07,728  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:25:07,802  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:25:08,457  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.609) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 18:25:08,602  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.141) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 18:25:08,660  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 18:25:08,903  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.203) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:25:09,220  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.281) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:25:09,352  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:25:09,440  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:25:09,565  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 18:25:09,608  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 18:25:09,661  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "COUNTERPARTY_ORG"."ID", "COUNTERPARTY_ORG"."CORPORATE_NAME", "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE", "COUNTERPARTY_ORG"."ID_KIND", "COUNTERPARTY_ORG"."SECONDRAY_TRADER_CLIENT", "COUNTERPARTY_ORG"."SECONDRAY_TRADER", "COUNTERPARTY_ORG"."INDUSTRY", "COUNTERPARTY_ORG"."SCOPE_BUSINESS", "COUNTERPARTY_ORG"."LIST_ATTRIBUTE", "COUNTERPARTY_ORG"."START_DATE", "COUNTERPARTY_ORG"."END_DATE", "COUNTERPARTY_ORG"."CAPITAL_ATTRIBUTE", "COUNTERPARTY_ORG"."NATURE", "COUNTERPARTY_ORG"."APTITUDE", "COUNTERPARTY_ORG"."NONTAXRESIDENT", "COUNTERPARTY_ORG"."REGISTER_COUNTRY", "COUNTERPARTY_ORG"."REGISTERED_ADDRESS", "COUNTERPARTY_ORG"."OFFICE_ADDRESS", "COUNTERPARTY_ORG"."SETUP_DATE", "COUNTERPARTY_ORG"."REGISTERED_CAPITAL", "COUNTERPARTY_ORG"."CLIENT_TYPE", "COUNTERPARTY_ORG"."CREATE_TIME", "COUNTERPARTY_ORG"."CREATE_BY", "COUNTERPARTY_ORG"."UPDATE_TIME", "COUNTERPARTY_ORG"."UPDATE_BY", "COUNTERPARTY_ORG"."AUDIT_STATUS", "COUNTERPARTY_ORG"."ORGAN_TYPE", "COUNTERPARTY_ORG"."INTRODUCTION_DEPARTMENT", "COUNTERPARTY_ORG"."CUSTOMER_MANAGER", "COUNTERPARTY_ORG"."AML_MONITOR_FLAG", "COUNTERPARTY_ORG"."LASTEST_CLIENT_ID", "COUNTERPARTY_ORG"."CONCERN_FLAG", "COUNTERPARTY_ORG"."REGISTER_PROVINCE", "COUNTERPARTY_ORG"."REGISTER_CITY", "COUNTERPARTY_ORG"."ISSUING_DATE", "COUNTERPARTY_ORG"."BIG_CLIENT" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:25:40,067  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.110) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:25:40,141  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:25:40,807  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.609) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 18:25:41,068  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.266) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 18:25:41,131  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 18:25:41,368  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.203) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:25:41,688  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.281) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:25:41,808  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:25:41,965  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.125) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:25:42,156  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 18:25:42,209  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 18:25:42,265  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."ID", "COUNTERPARTY_ORG"."CORPORATE_NAME", "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE", "COUNTERPARTY_ORG"."ID_KIND", "COUNTERPARTY_ORG"."SECONDRAY_TRADER_CLIENT", "COUNTERPARTY_ORG"."SECONDRAY_TRADER", "COUNTERPARTY_ORG"."INDUSTRY", "COUNTERPARTY_ORG"."SCOPE_BUSINESS", "COUNTERPARTY_ORG"."LIST_ATTRIBUTE", "COUNTERPARTY_ORG"."START_DATE", "COUNTERPARTY_ORG"."END_DATE", "COUNTERPARTY_ORG"."CAPITAL_ATTRIBUTE", "COUNTERPARTY_ORG"."NATURE", "COUNTERPARTY_ORG"."APTITUDE", "COUNTERPARTY_ORG"."NONTAXRESIDENT", "COUNTERPARTY_ORG"."REGISTER_COUNTRY", "COUNTERPARTY_ORG"."REGISTERED_ADDRESS", "COUNTERPARTY_ORG"."OFFICE_ADDRESS", "COUNTERPARTY_ORG"."SETUP_DATE", "COUNTERPARTY_ORG"."REGISTERED_CAPITAL", "COUNTERPARTY_ORG"."CLIENT_TYPE", "COUNTERPARTY_ORG"."CREATE_TIME", "COUNTERPARTY_ORG"."CREATE_BY", "COUNTERPARTY_ORG"."UPDATE_TIME", "COUNTERPARTY_ORG"."UPDATE_BY", "COUNTERPARTY_ORG"."AUDIT_STATUS", "COUNTERPARTY_ORG"."ORGAN_TYPE", "COUNTERPARTY_ORG"."INTRODUCTION_DEPARTMENT", "COUNTERPARTY_ORG"."CUSTOMER_MANAGER", "COUNTERPARTY_ORG"."AML_MONITOR_FLAG", "COUNTERPARTY_ORG"."LASTEST_CLIENT_ID", "COUNTERPARTY_ORG"."CONCERN_FLAG", "COUNTERPARTY_ORG"."REGISTER_PROVINCE", "COUNTERPARTY_ORG"."REGISTER_CITY", "COUNTERPARTY_ORG"."ISSUING_DATE", "COUNTERPARTY_ORG"."BIG_CLIENT" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:26:21,433  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:26:21,509  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:26:22,158  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.594) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 18:26:22,304  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.141) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 18:26:22,359  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 18:26:22,602  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.203) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:26:22,918  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.281) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:26:23,037  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.093) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:26:23,125  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.046) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:26:23,244  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.093) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 18:26:23,290  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 18:26:23,352  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:28:31,031  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:28:31,106  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:28:31,752  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.593) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 18:28:31,896  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.141) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 18:28:31,956  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 18:28:32,193  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.204) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:28:32,515  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.281) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:28:32,636  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:28:32,722  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:28:32,837  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 18:28:32,885  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 18:28:32,935  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:28:53,604  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:28:53,684  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:28:54,345  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.609) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 18:28:54,497  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.156) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 18:28:54,555  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 18:28:54,794  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.203) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:28:55,110  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.281) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:28:55,228  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:28:55,316  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:28:55,432  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 18:28:55,477  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 18:28:55,528  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:33:52,640  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:33:52,723  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:33:53,503  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.734) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 18:33:53,667  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.156) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 18:33:53,727  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 18:33:54,000  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.234) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:33:54,367  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.343) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:33:54,496  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.093) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:33:54,587  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:33:54,710  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 18:33:54,757  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 18:33:54,810  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:34:14,694  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:34:14,772  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:34:15,439  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.609) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 18:34:15,583  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.156) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 18:34:15,641  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 18:34:15,881  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.219) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:34:16,201  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.282) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:34:16,320  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:34:16,405  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:34:16,523  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 18:34:16,569  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 18:34:16,619  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.046) SELECT "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:34:16,707  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."ID", "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."ABBREVIATION", "OTC_DERIVATIVE_COUNTERPARTY"."NAME_ABBREVIATION", "OTC_DERIVATIVE_COUNTERPARTY"."ORGANIZATION_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTERED_ADDRESS", "OTC_DERIVATIVE_COUNTERPARTY"."OFFICE_ADDRESS", "OTC_DERIVATIVE_COUNTERPARTY"."SCOPE_BUSINESS", "OTC_DERIVATIVE_COUNTERPARTY"."START_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."END_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."LIMITED_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."MAJOR_MECHANISM", "OTC_DERIVATIVE_COUNTERPARTY"."NATURE", "OTC_DERIVATIVE_COUNTERPARTY"."APTITUDE", "OTC_DERIVATIVE_COUNTERPARTY"."LIST_ATTRIBUTE", "OTC_DERIVATIVE_COUNTERPARTY"."CAPITAL_ATTRIBUTE", "OTC_DERIVATIVE_COUNTERPARTY"."INVESTMENT_VARIETIES", "OTC_DERIVATIVE_COUNTERPARTY"."PARTY_CONTACTMAN", "OTC_DERIVATIVE_COUNTERPARTY"."ACTUAL_CONTROLLER", "OTC_DERIVATIVE_COUNTERPARTY"."LEGAL_PERSON", "OTC_DERIVATIVE_COUNTERPARTY"."PROFESSIONAL_INVESTORS", "OTC_DERIVATIVE_COUNTERPARTY"."MOBILE_PHONE", "OTC_DERIVATIVE_COUNTERPARTY"."UNIFIEDSOCIAL_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."SIGNATURE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AGREEMENT_SIGNING_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AUDIT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."PARTY_B_CONTACT", "OTC_DERIVATIVE_COUNTERPARTY"."OUR_CONTRACTUAL_SIDE", "OTC_DERIVATIVE_COUNTERPARTY"."CREDIT_RATING", "OTC_DERIVATIVE_COUNTERPARTY"."PROTOCOL_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."OPERATOR", "OTC_DERIVATIVE_COUNTERPARTY"."NONTAXRESIDENT", "OTC_DERIVATIVE_COUNTERPARTY"."RISK_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."TERMOF_INVESTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."EXPECTED_INCOME", "OTC_DERIVATIVE_COUNTERPARTY"."REPORT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."INTRODUCTION_DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."CUSTOMER_MANAGER", "OTC_DERIVATIVE_COUNTERPARTY"."NET_TRADING", "OTC_DERIVATIVE_COUNTERPARTY"."PERFORMANCE_PROTOCOL_SIGN_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."CLASSIFICATION_RATING", "OTC_DERIVATIVE_COUNTERPARTY"."SHAREHOLDER_INFO", "OTC_DERIVATIVE_COUNTERPARTY"."HOST_DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."FAX_TEL", "OTC_DERIVATIVE_COUNTERPARTY"."IS_CREDITED", "OTC_DERIVATIVE_COUNTERPARTY"."UPDATER", "OTC_DERIVATIVE_COUNTERPARTY"."UPDATE_TIME", "OTC_DERIVATIVE_COUNTERPARTY"."AML_RISK_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTERED_CAPITAL", "OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW_DES", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."ALLOW_OPTION_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."DELETE_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."VALID_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."INVALID_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."SECONDRAY_TRADER_CLIENT", "OTC_DERIVATIVE_COUNTERPARTY"."SECONDRAY_TRADER", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_CERT_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_CERT_NO", "OTC_DERIVATIVE_COUNTERPARTY"."ECIF_CUST_NO", "OTC_DERIVATIVE_COUNTERPARTY"."SETUP_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."INDUSTRY", "OTC_DERIVATIVE_COUNTERPARTY"."RETURN_VISIT_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."RETURN_VISIT_DATA_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."EXTRAN_PROSCALE_RATIO", "OTC_DERIVATIVE_COUNTERPARTY"."MARGIN_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."PRODUCT_ESTAB_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."PAYEE_MIN_TRANSFER_AMOUNT", "OTC_DERIVATIVE_COUNTERPARTY"."PAYER_MIN_TRANSFER_AMOUNT", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_COEFFICIENT", "OTC_DERIVATIVE_COUNTERPARTY"."OP_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PUT_TAKE_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."GUARANTEE_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."EXECUTE_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."BLOCK_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."INITIAL_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."FINAL_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."CREATE_BY", "OTC_DERIVATIVE_COUNTERPARTY"."CREATE_TIME", "OTC_DERIVATIVE_COUNTERPARTY"."JOB_ID", "OTC_DERIVATIVE_COUNTERPARTY"."AUDIT_STATUS_BAK", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_COUNT", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_FIRST_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_ID_BOTH", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_ID_BOTH", "OTC_DERIVATIVE_COUNTERPARTY"."FILL_ROLE", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."SIGNED_PRODUCT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."RPT_PRODCODE", "OTC_DERIVATIVE_COUNTERPARTY"."GUARANTEE_AGRMT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."COMMISSION_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."ALLOW_BUSI_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PARTIAL_MARGIN_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."COMMISSION_RATE_HK", "OTC_DERIVATIVE_COUNTERPARTY"."PREMIUM_FEE_RATIO", "OTC_DERIVATIVE_COUNTERPARTY"."INTEREST_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."INTEREST_INTERVAL", "OTC_DERIVATIVE_COUNTERPARTY"."EXCHANGE_RATE_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."AML_MONITOR_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."CPTY_NOTIONAL_LIMIT", "OTC_DERIVATIVE_COUNTERPARTY"."BENEFIT_OVER_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."FIID", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FEE_RATE_US", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FEE_RATE_HK", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FIXED_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."RELATED_PARTY_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."RELATED_PARTY_RESULT", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTER_COUNTRY", "OTC_DERIVATIVE_COUNTERPARTY"."REMARK", "OTC_DERIVATIVE_COUNTERPARTY"."OPTION_DURATION_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."TRS_DURATION_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."AML_EXCLUDE_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."ID_KIND", "OTC_DERIVATIVE_COUNTERPARTY"."GRANT_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."GRANT_BALANCE_EXPIRE_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."MARGIN_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."CONCERN_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_END_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AB_FUTURES_PREMIUM_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."AB_FUTURES_LEVEL_FACTOR", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_TYPE_OTHER", "OTC_DERIVATIVE_COUNTERPARTY"."SPREAD", "OTC_DERIVATIVE_COUNTERPARTY"."LEI_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_PROTOCOL", "OTC_DERIVATIVE_COUNTERPARTY"."PUBLIC_RELATED", "OTC_DERIVATIVE_COUNTERPARTY"."PUBLIC_STOCK_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."INTRODUCTION_OPERATOR", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW_REASON", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_PUBLIC_RELATED", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_PUBLIC_STOCK_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."EXCHANGE_REPORT_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."CHAT_ROOM_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."NO_AUTO_VISIT", "OTC_DERIVATIVE_COUNTERPARTY"."PRODUCT_REPORT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."OPTION_PRODUCT_QUALITY_REASON", "OTC_DERIVATIVE_COUNTERPARTY"."HIS_ALLOW_BUSI_TYPE" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE (DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类 AND DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER") = 03); args=('测试产品关注类', '03')
2023-10-18 18:34:42,263  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:34:42,339  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:34:42,994  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.609) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 18:34:43,136  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.141) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 18:34:43,199  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 18:34:43,439  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.203) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:34:43,757  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.297) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:34:43,878  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:34:43,966  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:34:44,085  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 18:34:44,131  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 18:34:44,181  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:34:44,263  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."ID", "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."ABBREVIATION", "OTC_DERIVATIVE_COUNTERPARTY"."NAME_ABBREVIATION", "OTC_DERIVATIVE_COUNTERPARTY"."ORGANIZATION_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTERED_ADDRESS", "OTC_DERIVATIVE_COUNTERPARTY"."OFFICE_ADDRESS", "OTC_DERIVATIVE_COUNTERPARTY"."SCOPE_BUSINESS", "OTC_DERIVATIVE_COUNTERPARTY"."START_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."END_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."LIMITED_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."MAJOR_MECHANISM", "OTC_DERIVATIVE_COUNTERPARTY"."NATURE", "OTC_DERIVATIVE_COUNTERPARTY"."APTITUDE", "OTC_DERIVATIVE_COUNTERPARTY"."LIST_ATTRIBUTE", "OTC_DERIVATIVE_COUNTERPARTY"."CAPITAL_ATTRIBUTE", "OTC_DERIVATIVE_COUNTERPARTY"."INVESTMENT_VARIETIES", "OTC_DERIVATIVE_COUNTERPARTY"."PARTY_CONTACTMAN", "OTC_DERIVATIVE_COUNTERPARTY"."ACTUAL_CONTROLLER", "OTC_DERIVATIVE_COUNTERPARTY"."LEGAL_PERSON", "OTC_DERIVATIVE_COUNTERPARTY"."PROFESSIONAL_INVESTORS", "OTC_DERIVATIVE_COUNTERPARTY"."MOBILE_PHONE", "OTC_DERIVATIVE_COUNTERPARTY"."UNIFIEDSOCIAL_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."SIGNATURE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AGREEMENT_SIGNING_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AUDIT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."PARTY_B_CONTACT", "OTC_DERIVATIVE_COUNTERPARTY"."OUR_CONTRACTUAL_SIDE", "OTC_DERIVATIVE_COUNTERPARTY"."CREDIT_RATING", "OTC_DERIVATIVE_COUNTERPARTY"."PROTOCOL_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."OPERATOR", "OTC_DERIVATIVE_COUNTERPARTY"."NONTAXRESIDENT", "OTC_DERIVATIVE_COUNTERPARTY"."RISK_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."TERMOF_INVESTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."EXPECTED_INCOME", "OTC_DERIVATIVE_COUNTERPARTY"."REPORT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."INTRODUCTION_DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."CUSTOMER_MANAGER", "OTC_DERIVATIVE_COUNTERPARTY"."NET_TRADING", "OTC_DERIVATIVE_COUNTERPARTY"."PERFORMANCE_PROTOCOL_SIGN_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."CLASSIFICATION_RATING", "OTC_DERIVATIVE_COUNTERPARTY"."SHAREHOLDER_INFO", "OTC_DERIVATIVE_COUNTERPARTY"."HOST_DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."FAX_TEL", "OTC_DERIVATIVE_COUNTERPARTY"."IS_CREDITED", "OTC_DERIVATIVE_COUNTERPARTY"."UPDATER", "OTC_DERIVATIVE_COUNTERPARTY"."UPDATE_TIME", "OTC_DERIVATIVE_COUNTERPARTY"."AML_RISK_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTERED_CAPITAL", "OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW_DES", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."ALLOW_OPTION_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."DELETE_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."VALID_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."INVALID_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."SECONDRAY_TRADER_CLIENT", "OTC_DERIVATIVE_COUNTERPARTY"."SECONDRAY_TRADER", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_CERT_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_CERT_NO", "OTC_DERIVATIVE_COUNTERPARTY"."ECIF_CUST_NO", "OTC_DERIVATIVE_COUNTERPARTY"."SETUP_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."INDUSTRY", "OTC_DERIVATIVE_COUNTERPARTY"."RETURN_VISIT_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."RETURN_VISIT_DATA_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."EXTRAN_PROSCALE_RATIO", "OTC_DERIVATIVE_COUNTERPARTY"."MARGIN_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."PRODUCT_ESTAB_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."PAYEE_MIN_TRANSFER_AMOUNT", "OTC_DERIVATIVE_COUNTERPARTY"."PAYER_MIN_TRANSFER_AMOUNT", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_COEFFICIENT", "OTC_DERIVATIVE_COUNTERPARTY"."OP_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PUT_TAKE_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."GUARANTEE_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."EXECUTE_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."BLOCK_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."INITIAL_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."FINAL_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."CREATE_BY", "OTC_DERIVATIVE_COUNTERPARTY"."CREATE_TIME", "OTC_DERIVATIVE_COUNTERPARTY"."JOB_ID", "OTC_DERIVATIVE_COUNTERPARTY"."AUDIT_STATUS_BAK", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_COUNT", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_FIRST_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_ID_BOTH", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_ID_BOTH", "OTC_DERIVATIVE_COUNTERPARTY"."FILL_ROLE", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."SIGNED_PRODUCT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."RPT_PRODCODE", "OTC_DERIVATIVE_COUNTERPARTY"."GUARANTEE_AGRMT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."COMMISSION_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."ALLOW_BUSI_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PARTIAL_MARGIN_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."COMMISSION_RATE_HK", "OTC_DERIVATIVE_COUNTERPARTY"."PREMIUM_FEE_RATIO", "OTC_DERIVATIVE_COUNTERPARTY"."INTEREST_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."INTEREST_INTERVAL", "OTC_DERIVATIVE_COUNTERPARTY"."EXCHANGE_RATE_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."AML_MONITOR_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."CPTY_NOTIONAL_LIMIT", "OTC_DERIVATIVE_COUNTERPARTY"."BENEFIT_OVER_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."FIID", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FEE_RATE_US", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FEE_RATE_HK", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FIXED_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."RELATED_PARTY_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."RELATED_PARTY_RESULT", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTER_COUNTRY", "OTC_DERIVATIVE_COUNTERPARTY"."REMARK", "OTC_DERIVATIVE_COUNTERPARTY"."OPTION_DURATION_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."TRS_DURATION_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."AML_EXCLUDE_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."ID_KIND", "OTC_DERIVATIVE_COUNTERPARTY"."GRANT_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."GRANT_BALANCE_EXPIRE_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."MARGIN_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."CONCERN_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_END_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AB_FUTURES_PREMIUM_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."AB_FUTURES_LEVEL_FACTOR", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_TYPE_OTHER", "OTC_DERIVATIVE_COUNTERPARTY"."SPREAD", "OTC_DERIVATIVE_COUNTERPARTY"."LEI_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_PROTOCOL", "OTC_DERIVATIVE_COUNTERPARTY"."PUBLIC_RELATED", "OTC_DERIVATIVE_COUNTERPARTY"."PUBLIC_STOCK_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."INTRODUCTION_OPERATOR", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW_REASON", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_PUBLIC_RELATED", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_PUBLIC_STOCK_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."EXCHANGE_REPORT_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."CHAT_ROOM_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."NO_AUTO_VISIT", "OTC_DERIVATIVE_COUNTERPARTY"."PRODUCT_REPORT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."OPTION_PRODUCT_QUALITY_REASON", "OTC_DERIVATIVE_COUNTERPARTY"."HIS_ALLOW_BUSI_TYPE" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE (DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类 AND DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER") = 03); args=('测试产品关注类', '03')
2023-10-18 18:35:04,877  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:35:04,954  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:35:05,621  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.609) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 18:35:05,770  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.157) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 18:35:05,832  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 18:35:06,071  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.204) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:35:06,390  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.281) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:35:06,513  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:35:06,600  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:35:06,719  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 18:35:06,766  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 18:35:06,816  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:35:06,984  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."ID", "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."ABBREVIATION", "OTC_DERIVATIVE_COUNTERPARTY"."NAME_ABBREVIATION", "OTC_DERIVATIVE_COUNTERPARTY"."ORGANIZATION_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTERED_ADDRESS", "OTC_DERIVATIVE_COUNTERPARTY"."OFFICE_ADDRESS", "OTC_DERIVATIVE_COUNTERPARTY"."SCOPE_BUSINESS", "OTC_DERIVATIVE_COUNTERPARTY"."START_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."END_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."LIMITED_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."MAJOR_MECHANISM", "OTC_DERIVATIVE_COUNTERPARTY"."NATURE", "OTC_DERIVATIVE_COUNTERPARTY"."APTITUDE", "OTC_DERIVATIVE_COUNTERPARTY"."LIST_ATTRIBUTE", "OTC_DERIVATIVE_COUNTERPARTY"."CAPITAL_ATTRIBUTE", "OTC_DERIVATIVE_COUNTERPARTY"."INVESTMENT_VARIETIES", "OTC_DERIVATIVE_COUNTERPARTY"."PARTY_CONTACTMAN", "OTC_DERIVATIVE_COUNTERPARTY"."ACTUAL_CONTROLLER", "OTC_DERIVATIVE_COUNTERPARTY"."LEGAL_PERSON", "OTC_DERIVATIVE_COUNTERPARTY"."PROFESSIONAL_INVESTORS", "OTC_DERIVATIVE_COUNTERPARTY"."MOBILE_PHONE", "OTC_DERIVATIVE_COUNTERPARTY"."UNIFIEDSOCIAL_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."SIGNATURE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AGREEMENT_SIGNING_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AUDIT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."PARTY_B_CONTACT", "OTC_DERIVATIVE_COUNTERPARTY"."OUR_CONTRACTUAL_SIDE", "OTC_DERIVATIVE_COUNTERPARTY"."CREDIT_RATING", "OTC_DERIVATIVE_COUNTERPARTY"."PROTOCOL_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."OPERATOR", "OTC_DERIVATIVE_COUNTERPARTY"."NONTAXRESIDENT", "OTC_DERIVATIVE_COUNTERPARTY"."RISK_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."TERMOF_INVESTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."EXPECTED_INCOME", "OTC_DERIVATIVE_COUNTERPARTY"."REPORT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."INTRODUCTION_DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."CUSTOMER_MANAGER", "OTC_DERIVATIVE_COUNTERPARTY"."NET_TRADING", "OTC_DERIVATIVE_COUNTERPARTY"."PERFORMANCE_PROTOCOL_SIGN_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."CLASSIFICATION_RATING", "OTC_DERIVATIVE_COUNTERPARTY"."SHAREHOLDER_INFO", "OTC_DERIVATIVE_COUNTERPARTY"."HOST_DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."FAX_TEL", "OTC_DERIVATIVE_COUNTERPARTY"."IS_CREDITED", "OTC_DERIVATIVE_COUNTERPARTY"."UPDATER", "OTC_DERIVATIVE_COUNTERPARTY"."UPDATE_TIME", "OTC_DERIVATIVE_COUNTERPARTY"."AML_RISK_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTERED_CAPITAL", "OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW_DES", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."ALLOW_OPTION_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."DELETE_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."VALID_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."INVALID_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."SECONDRAY_TRADER_CLIENT", "OTC_DERIVATIVE_COUNTERPARTY"."SECONDRAY_TRADER", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_CERT_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_CERT_NO", "OTC_DERIVATIVE_COUNTERPARTY"."ECIF_CUST_NO", "OTC_DERIVATIVE_COUNTERPARTY"."SETUP_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."INDUSTRY", "OTC_DERIVATIVE_COUNTERPARTY"."RETURN_VISIT_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."RETURN_VISIT_DATA_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."EXTRAN_PROSCALE_RATIO", "OTC_DERIVATIVE_COUNTERPARTY"."MARGIN_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."PRODUCT_ESTAB_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."PAYEE_MIN_TRANSFER_AMOUNT", "OTC_DERIVATIVE_COUNTERPARTY"."PAYER_MIN_TRANSFER_AMOUNT", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_COEFFICIENT", "OTC_DERIVATIVE_COUNTERPARTY"."OP_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PUT_TAKE_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."GUARANTEE_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."EXECUTE_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."BLOCK_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."INITIAL_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."FINAL_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."CREATE_BY", "OTC_DERIVATIVE_COUNTERPARTY"."CREATE_TIME", "OTC_DERIVATIVE_COUNTERPARTY"."JOB_ID", "OTC_DERIVATIVE_COUNTERPARTY"."AUDIT_STATUS_BAK", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_COUNT", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_FIRST_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_ID_BOTH", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_ID_BOTH", "OTC_DERIVATIVE_COUNTERPARTY"."FILL_ROLE", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."SIGNED_PRODUCT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."RPT_PRODCODE", "OTC_DERIVATIVE_COUNTERPARTY"."GUARANTEE_AGRMT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."COMMISSION_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."ALLOW_BUSI_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PARTIAL_MARGIN_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."COMMISSION_RATE_HK", "OTC_DERIVATIVE_COUNTERPARTY"."PREMIUM_FEE_RATIO", "OTC_DERIVATIVE_COUNTERPARTY"."INTEREST_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."INTEREST_INTERVAL", "OTC_DERIVATIVE_COUNTERPARTY"."EXCHANGE_RATE_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."AML_MONITOR_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."CPTY_NOTIONAL_LIMIT", "OTC_DERIVATIVE_COUNTERPARTY"."BENEFIT_OVER_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."FIID", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FEE_RATE_US", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FEE_RATE_HK", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FIXED_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."RELATED_PARTY_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."RELATED_PARTY_RESULT", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTER_COUNTRY", "OTC_DERIVATIVE_COUNTERPARTY"."REMARK", "OTC_DERIVATIVE_COUNTERPARTY"."OPTION_DURATION_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."TRS_DURATION_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."AML_EXCLUDE_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."ID_KIND", "OTC_DERIVATIVE_COUNTERPARTY"."GRANT_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."GRANT_BALANCE_EXPIRE_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."MARGIN_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."CONCERN_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_END_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AB_FUTURES_PREMIUM_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."AB_FUTURES_LEVEL_FACTOR", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_TYPE_OTHER", "OTC_DERIVATIVE_COUNTERPARTY"."SPREAD", "OTC_DERIVATIVE_COUNTERPARTY"."LEI_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_PROTOCOL", "OTC_DERIVATIVE_COUNTERPARTY"."PUBLIC_RELATED", "OTC_DERIVATIVE_COUNTERPARTY"."PUBLIC_STOCK_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."INTRODUCTION_OPERATOR", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW_REASON", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_PUBLIC_RELATED", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_PUBLIC_STOCK_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."EXCHANGE_REPORT_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."CHAT_ROOM_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."NO_AUTO_VISIT", "OTC_DERIVATIVE_COUNTERPARTY"."PRODUCT_REPORT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."OPTION_PRODUCT_QUALITY_REASON", "OTC_DERIVATIVE_COUNTERPARTY"."HIS_ALLOW_BUSI_TYPE" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE (DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类 AND DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER") = 03); args=('测试产品关注类', '03')
2023-10-18 18:35:36,334  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."ID", "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."ABBREVIATION", "OTC_DERIVATIVE_COUNTERPARTY"."NAME_ABBREVIATION", "OTC_DERIVATIVE_COUNTERPARTY"."ORGANIZATION_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTERED_ADDRESS", "OTC_DERIVATIVE_COUNTERPARTY"."OFFICE_ADDRESS", "OTC_DERIVATIVE_COUNTERPARTY"."SCOPE_BUSINESS", "OTC_DERIVATIVE_COUNTERPARTY"."START_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."END_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."LIMITED_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."MAJOR_MECHANISM", "OTC_DERIVATIVE_COUNTERPARTY"."NATURE", "OTC_DERIVATIVE_COUNTERPARTY"."APTITUDE", "OTC_DERIVATIVE_COUNTERPARTY"."LIST_ATTRIBUTE", "OTC_DERIVATIVE_COUNTERPARTY"."CAPITAL_ATTRIBUTE", "OTC_DERIVATIVE_COUNTERPARTY"."INVESTMENT_VARIETIES", "OTC_DERIVATIVE_COUNTERPARTY"."PARTY_CONTACTMAN", "OTC_DERIVATIVE_COUNTERPARTY"."ACTUAL_CONTROLLER", "OTC_DERIVATIVE_COUNTERPARTY"."LEGAL_PERSON", "OTC_DERIVATIVE_COUNTERPARTY"."PROFESSIONAL_INVESTORS", "OTC_DERIVATIVE_COUNTERPARTY"."MOBILE_PHONE", "OTC_DERIVATIVE_COUNTERPARTY"."UNIFIEDSOCIAL_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."SIGNATURE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AGREEMENT_SIGNING_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AUDIT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."PARTY_B_CONTACT", "OTC_DERIVATIVE_COUNTERPARTY"."OUR_CONTRACTUAL_SIDE", "OTC_DERIVATIVE_COUNTERPARTY"."CREDIT_RATING", "OTC_DERIVATIVE_COUNTERPARTY"."PROTOCOL_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."OPERATOR", "OTC_DERIVATIVE_COUNTERPARTY"."NONTAXRESIDENT", "OTC_DERIVATIVE_COUNTERPARTY"."RISK_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."TERMOF_INVESTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."EXPECTED_INCOME", "OTC_DERIVATIVE_COUNTERPARTY"."REPORT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."INTRODUCTION_DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."CUSTOMER_MANAGER", "OTC_DERIVATIVE_COUNTERPARTY"."NET_TRADING", "OTC_DERIVATIVE_COUNTERPARTY"."PERFORMANCE_PROTOCOL_SIGN_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."CLASSIFICATION_RATING", "OTC_DERIVATIVE_COUNTERPARTY"."SHAREHOLDER_INFO", "OTC_DERIVATIVE_COUNTERPARTY"."HOST_DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."FAX_TEL", "OTC_DERIVATIVE_COUNTERPARTY"."IS_CREDITED", "OTC_DERIVATIVE_COUNTERPARTY"."UPDATER", "OTC_DERIVATIVE_COUNTERPARTY"."UPDATE_TIME", "OTC_DERIVATIVE_COUNTERPARTY"."AML_RISK_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTERED_CAPITAL", "OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW_DES", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."ALLOW_OPTION_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."DELETE_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."VALID_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."INVALID_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."SECONDRAY_TRADER_CLIENT", "OTC_DERIVATIVE_COUNTERPARTY"."SECONDRAY_TRADER", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_CERT_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_CERT_NO", "OTC_DERIVATIVE_COUNTERPARTY"."ECIF_CUST_NO", "OTC_DERIVATIVE_COUNTERPARTY"."SETUP_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."INDUSTRY", "OTC_DERIVATIVE_COUNTERPARTY"."RETURN_VISIT_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."RETURN_VISIT_DATA_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."EXTRAN_PROSCALE_RATIO", "OTC_DERIVATIVE_COUNTERPARTY"."MARGIN_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."PRODUCT_ESTAB_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."PAYEE_MIN_TRANSFER_AMOUNT", "OTC_DERIVATIVE_COUNTERPARTY"."PAYER_MIN_TRANSFER_AMOUNT", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_COEFFICIENT", "OTC_DERIVATIVE_COUNTERPARTY"."OP_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PUT_TAKE_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."GUARANTEE_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."EXECUTE_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."BLOCK_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."INITIAL_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."FINAL_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."CREATE_BY", "OTC_DERIVATIVE_COUNTERPARTY"."CREATE_TIME", "OTC_DERIVATIVE_COUNTERPARTY"."JOB_ID", "OTC_DERIVATIVE_COUNTERPARTY"."AUDIT_STATUS_BAK", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_COUNT", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_FIRST_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_ID_BOTH", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_ID_BOTH", "OTC_DERIVATIVE_COUNTERPARTY"."FILL_ROLE", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."SIGNED_PRODUCT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."RPT_PRODCODE", "OTC_DERIVATIVE_COUNTERPARTY"."GUARANTEE_AGRMT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."COMMISSION_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."ALLOW_BUSI_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PARTIAL_MARGIN_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."COMMISSION_RATE_HK", "OTC_DERIVATIVE_COUNTERPARTY"."PREMIUM_FEE_RATIO", "OTC_DERIVATIVE_COUNTERPARTY"."INTEREST_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."INTEREST_INTERVAL", "OTC_DERIVATIVE_COUNTERPARTY"."EXCHANGE_RATE_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."AML_MONITOR_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."CPTY_NOTIONAL_LIMIT", "OTC_DERIVATIVE_COUNTERPARTY"."BENEFIT_OVER_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."FIID", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FEE_RATE_US", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FEE_RATE_HK", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FIXED_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."RELATED_PARTY_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."RELATED_PARTY_RESULT", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTER_COUNTRY", "OTC_DERIVATIVE_COUNTERPARTY"."REMARK", "OTC_DERIVATIVE_COUNTERPARTY"."OPTION_DURATION_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."TRS_DURATION_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."AML_EXCLUDE_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."ID_KIND", "OTC_DERIVATIVE_COUNTERPARTY"."GRANT_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."GRANT_BALANCE_EXPIRE_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."MARGIN_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."CONCERN_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_END_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AB_FUTURES_PREMIUM_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."AB_FUTURES_LEVEL_FACTOR", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_TYPE_OTHER", "OTC_DERIVATIVE_COUNTERPARTY"."SPREAD", "OTC_DERIVATIVE_COUNTERPARTY"."LEI_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_PROTOCOL", "OTC_DERIVATIVE_COUNTERPARTY"."PUBLIC_RELATED", "OTC_DERIVATIVE_COUNTERPARTY"."PUBLIC_STOCK_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."INTRODUCTION_OPERATOR", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW_REASON", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_PUBLIC_RELATED", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_PUBLIC_STOCK_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."EXCHANGE_REPORT_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."CHAT_ROOM_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."NO_AUTO_VISIT", "OTC_DERIVATIVE_COUNTERPARTY"."PRODUCT_REPORT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."OPTION_PRODUCT_QUALITY_REASON", "OTC_DERIVATIVE_COUNTERPARTY"."HIS_ALLOW_BUSI_TYPE" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE (DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类 AND DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER") = 02); args=('测试产品关注类', '02')
2023-10-18 18:36:28,994  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.046) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:36:29,072  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.079) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:36:29,737  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.625) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 18:36:29,880  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.141) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 18:36:29,937  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 18:36:30,179  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.203) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:36:30,505  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.297) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:36:30,623  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:36:30,716  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:36:30,833  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 18:36:30,884  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 18:36:30,943  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:36:31,112  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.093) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE (DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类 AND DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER") = 03); args=('测试产品关注类', '03')
2023-10-18 18:37:17,207  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:37:17,288  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:37:17,941  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.610) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 18:37:18,088  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.140) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 18:37:18,145  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "CLIENT_REVIEW_RECORD"."ID", "CLIENT_REVIEW_RECORD"."DOC_ID", "CLIENT_REVIEW_RECORD"."TITLE", "CLIENT_REVIEW_RECORD"."CLIENT_NAME", "CLIENT_REVIEW_RECORD"."UNIFIEDSOCIAL_CODE", "CLIENT_REVIEW_RECORD"."REVIEW_DATE", "CLIENT_REVIEW_RECORD"."REVIEW_USER", "CLIENT_REVIEW_RECORD"."REVIEW_NAME", "CLIENT_REVIEW_RECORD"."CURRENT_STATUS", "CLIENT_REVIEW_RECORD"."CURRENT_OPERATOR", "CLIENT_REVIEW_RECORD"."CURRENT_ACTIVITY_NAME", "CLIENT_REVIEW_RECORD"."RECORD_ID", "CLIENT_REVIEW_RECORD"."CREATED_DATETIME", "CLIENT_REVIEW_RECORD"."WORK_PHONE", "CLIENT_REVIEW_RECORD"."PHONE", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL", "CLIENT_REVIEW_RECORD"."SECURITY_LEVEL_DETAIL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL", "CLIENT_REVIEW_RECORD"."URGENCY_LEVEL_REASON", "CLIENT_REVIEW_RECORD"."SALE_PERSON", "CLIENT_REVIEW_RECORD"."REVIEW_TERM", "CLIENT_REVIEW_RECORD"."REVIEW_PROCESS_TYPE", "CLIENT_REVIEW_RECORD"."SPECIAL_MENTIONED_CUSTOMER", "CLIENT_REVIEW_RECORD"."VERSION", "CLIENT_REVIEW_RECORD"."NO_MORE_REVIEW", "CLIENT_REVIEW_RECORD"."ACCOUNTING_FIRM_NAME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS_TIME", "CLIENT_REVIEW_RECORD"."SUPPLEMENTARY_MATERIALS", "CLIENT_REVIEW_RECORD"."REACH_TO_03_DATETIME", "CLIENT_REVIEW_RECORD"."SERIAL_NUMBER" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 18:37:18,382  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.203) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:37:18,698  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.282) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:37:18,822  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:37:18,911  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B), ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)); args=('ClientReviewRecord object (52D611AF01184663A8DAAA136C03777B)', 'ClientReviewRecord object (3C79C0A7964D4E4E942C3961BF739811)')
2023-10-18 18:37:19,025  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 18:37:19,073  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 18:37:19,122  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.046) SELECT "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 18:37:19,196  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.079) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE (DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类 AND DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER") = 03); args=('测试产品关注类', '03')
2023-10-18 19:11:40,792  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 19:11:40,870  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 19:11:41,539  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.625) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 19:11:41,689  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.141) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 19:11:41,751  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.046) SELECT "CLIENT_REVIEW_RECORD"."RECORD_ID" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 19:11:41,989  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.203) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN ({'record_id': '51E3E9F2D6854A3C833FCE222DBA387D'}, {'record_id': '5A1D87E6EA504DFF92372BD3BD482772'}); args=("{'record_id': '51E3E9F2D6854A3C833FCE222DBA387D'}", "{'record_id': '5A1D87E6EA504DFF92372BD3BD482772'}")
2023-10-18 19:11:42,370  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.265) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN ({'record_id': '51E3E9F2D6854A3C833FCE222DBA387D'}, {'record_id': '5A1D87E6EA504DFF92372BD3BD482772'}); args=("{'record_id': '51E3E9F2D6854A3C833FCE222DBA387D'}", "{'record_id': '5A1D87E6EA504DFF92372BD3BD482772'}")
2023-10-18 19:11:42,489  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.093) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN ({'record_id': '51E3E9F2D6854A3C833FCE222DBA387D'}, {'record_id': '5A1D87E6EA504DFF92372BD3BD482772'}); args=("{'record_id': '51E3E9F2D6854A3C833FCE222DBA387D'}", "{'record_id': '5A1D87E6EA504DFF92372BD3BD482772'}")
2023-10-18 19:11:42,577  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN ({'record_id': '51E3E9F2D6854A3C833FCE222DBA387D'}, {'record_id': '5A1D87E6EA504DFF92372BD3BD482772'}); args=("{'record_id': '51E3E9F2D6854A3C833FCE222DBA387D'}", "{'record_id': '5A1D87E6EA504DFF92372BD3BD482772'}")
2023-10-18 19:12:20,329  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 19:12:20,407  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 19:12:21,078  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.610) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 19:12:21,222  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.156) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 19:12:21,282  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "CLIENT_REVIEW_RECORD"."RECORD_ID" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 19:24:46,587  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 19:24:46,662  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 19:24:47,323  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.610) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 19:24:47,466  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.140) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 19:24:47,518  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "CLIENT_REVIEW_RECORD"."RECORD_ID" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 19:24:47,758  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.203) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (51E3E9F2D6854A3C833FCE222DBA387D, 5A1D87E6EA504DFF92372BD3BD482772); args=('51E3E9F2D6854A3C833FCE222DBA387D', '5A1D87E6EA504DFF92372BD3BD482772')
2023-10-18 19:24:48,079  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.282) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (51E3E9F2D6854A3C833FCE222DBA387D, 5A1D87E6EA504DFF92372BD3BD482772); args=('51E3E9F2D6854A3C833FCE222DBA387D', '5A1D87E6EA504DFF92372BD3BD482772')
2023-10-18 19:24:48,203  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (51E3E9F2D6854A3C833FCE222DBA387D, 5A1D87E6EA504DFF92372BD3BD482772); args=('51E3E9F2D6854A3C833FCE222DBA387D', '5A1D87E6EA504DFF92372BD3BD482772')
2023-10-18 19:24:48,291  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (51E3E9F2D6854A3C833FCE222DBA387D, 5A1D87E6EA504DFF92372BD3BD482772); args=('51E3E9F2D6854A3C833FCE222DBA387D', '5A1D87E6EA504DFF92372BD3BD482772')
2023-10-18 20:07:21,806  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 20:07:21,883  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 20:07:22,541  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.609) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 20:07:22,689  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.141) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 20:07:22,741  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.046) SELECT "CLIENT_REVIEW_RECORD"."RECORD_ID" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 20:07:22,947  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.079) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 20:07:22,997  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.046) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 20:07:23,048  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 20:07:23,124  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE (DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类 AND DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER") = 03); args=('测试产品关注类', '03')
2023-10-18 20:07:51,072  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."ID", "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."ABBREVIATION", "OTC_DERIVATIVE_COUNTERPARTY"."NAME_ABBREVIATION", "OTC_DERIVATIVE_COUNTERPARTY"."ORGANIZATION_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTERED_ADDRESS", "OTC_DERIVATIVE_COUNTERPARTY"."OFFICE_ADDRESS", "OTC_DERIVATIVE_COUNTERPARTY"."SCOPE_BUSINESS", "OTC_DERIVATIVE_COUNTERPARTY"."START_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."END_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."LIMITED_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."MAJOR_MECHANISM", "OTC_DERIVATIVE_COUNTERPARTY"."NATURE", "OTC_DERIVATIVE_COUNTERPARTY"."APTITUDE", "OTC_DERIVATIVE_COUNTERPARTY"."LIST_ATTRIBUTE", "OTC_DERIVATIVE_COUNTERPARTY"."CAPITAL_ATTRIBUTE", "OTC_DERIVATIVE_COUNTERPARTY"."INVESTMENT_VARIETIES", "OTC_DERIVATIVE_COUNTERPARTY"."PARTY_CONTACTMAN", "OTC_DERIVATIVE_COUNTERPARTY"."ACTUAL_CONTROLLER", "OTC_DERIVATIVE_COUNTERPARTY"."LEGAL_PERSON", "OTC_DERIVATIVE_COUNTERPARTY"."PROFESSIONAL_INVESTORS", "OTC_DERIVATIVE_COUNTERPARTY"."MOBILE_PHONE", "OTC_DERIVATIVE_COUNTERPARTY"."UNIFIEDSOCIAL_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."SIGNATURE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AGREEMENT_SIGNING_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AUDIT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."PARTY_B_CONTACT", "OTC_DERIVATIVE_COUNTERPARTY"."OUR_CONTRACTUAL_SIDE", "OTC_DERIVATIVE_COUNTERPARTY"."CREDIT_RATING", "OTC_DERIVATIVE_COUNTERPARTY"."PROTOCOL_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."OPERATOR", "OTC_DERIVATIVE_COUNTERPARTY"."NONTAXRESIDENT", "OTC_DERIVATIVE_COUNTERPARTY"."RISK_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."TERMOF_INVESTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."EXPECTED_INCOME", "OTC_DERIVATIVE_COUNTERPARTY"."REPORT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."INTRODUCTION_DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."CUSTOMER_MANAGER", "OTC_DERIVATIVE_COUNTERPARTY"."NET_TRADING", "OTC_DERIVATIVE_COUNTERPARTY"."PERFORMANCE_PROTOCOL_SIGN_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."CLASSIFICATION_RATING", "OTC_DERIVATIVE_COUNTERPARTY"."SHAREHOLDER_INFO", "OTC_DERIVATIVE_COUNTERPARTY"."HOST_DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."FAX_TEL", "OTC_DERIVATIVE_COUNTERPARTY"."IS_CREDITED", "OTC_DERIVATIVE_COUNTERPARTY"."UPDATER", "OTC_DERIVATIVE_COUNTERPARTY"."UPDATE_TIME", "OTC_DERIVATIVE_COUNTERPARTY"."AML_RISK_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTERED_CAPITAL", "OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW_DES", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."ALLOW_OPTION_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."DELETE_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."VALID_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."INVALID_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."SECONDRAY_TRADER_CLIENT", "OTC_DERIVATIVE_COUNTERPARTY"."SECONDRAY_TRADER", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_CERT_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_CERT_NO", "OTC_DERIVATIVE_COUNTERPARTY"."ECIF_CUST_NO", "OTC_DERIVATIVE_COUNTERPARTY"."SETUP_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."INDUSTRY", "OTC_DERIVATIVE_COUNTERPARTY"."RETURN_VISIT_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."RETURN_VISIT_DATA_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."EXTRAN_PROSCALE_RATIO", "OTC_DERIVATIVE_COUNTERPARTY"."MARGIN_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."PRODUCT_ESTAB_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."PAYEE_MIN_TRANSFER_AMOUNT", "OTC_DERIVATIVE_COUNTERPARTY"."PAYER_MIN_TRANSFER_AMOUNT", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_COEFFICIENT", "OTC_DERIVATIVE_COUNTERPARTY"."OP_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PUT_TAKE_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."GUARANTEE_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."EXECUTE_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."BLOCK_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."INITIAL_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."FINAL_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."CREATE_BY", "OTC_DERIVATIVE_COUNTERPARTY"."CREATE_TIME", "OTC_DERIVATIVE_COUNTERPARTY"."JOB_ID", "OTC_DERIVATIVE_COUNTERPARTY"."AUDIT_STATUS_BAK", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_COUNT", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_FIRST_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_ID_BOTH", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_ID_BOTH", "OTC_DERIVATIVE_COUNTERPARTY"."FILL_ROLE", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."SIGNED_PRODUCT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."RPT_PRODCODE", "OTC_DERIVATIVE_COUNTERPARTY"."GUARANTEE_AGRMT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."COMMISSION_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."ALLOW_BUSI_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PARTIAL_MARGIN_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."COMMISSION_RATE_HK", "OTC_DERIVATIVE_COUNTERPARTY"."PREMIUM_FEE_RATIO", "OTC_DERIVATIVE_COUNTERPARTY"."INTEREST_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."INTEREST_INTERVAL", "OTC_DERIVATIVE_COUNTERPARTY"."EXCHANGE_RATE_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."AML_MONITOR_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."CPTY_NOTIONAL_LIMIT", "OTC_DERIVATIVE_COUNTERPARTY"."BENEFIT_OVER_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."FIID", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FEE_RATE_US", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FEE_RATE_HK", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FIXED_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."RELATED_PARTY_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."RELATED_PARTY_RESULT", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTER_COUNTRY", "OTC_DERIVATIVE_COUNTERPARTY"."REMARK", "OTC_DERIVATIVE_COUNTERPARTY"."OPTION_DURATION_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."TRS_DURATION_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."AML_EXCLUDE_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."ID_KIND", "OTC_DERIVATIVE_COUNTERPARTY"."GRANT_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."GRANT_BALANCE_EXPIRE_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."MARGIN_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."CONCERN_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_END_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AB_FUTURES_PREMIUM_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."AB_FUTURES_LEVEL_FACTOR", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_TYPE_OTHER", "OTC_DERIVATIVE_COUNTERPARTY"."SPREAD", "OTC_DERIVATIVE_COUNTERPARTY"."LEI_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_PROTOCOL", "OTC_DERIVATIVE_COUNTERPARTY"."PUBLIC_RELATED", "OTC_DERIVATIVE_COUNTERPARTY"."PUBLIC_STOCK_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."INTRODUCTION_OPERATOR", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW_REASON", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_PUBLIC_RELATED", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_PUBLIC_STOCK_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."EXCHANGE_REPORT_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."CHAT_ROOM_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."NO_AUTO_VISIT", "OTC_DERIVATIVE_COUNTERPARTY"."PRODUCT_REPORT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."OPTION_PRODUCT_QUALITY_REASON", "OTC_DERIVATIVE_COUNTERPARTY"."HIS_ALLOW_BUSI_TYPE" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE (DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类 AND DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER") = 02); args=('测试产品关注类', '02')
2023-10-18 20:12:16,065  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 20:12:16,142  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 20:12:16,801  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.625) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 20:12:16,950  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.141) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 20:12:17,003  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "CLIENT_REVIEW_RECORD"."RECORD_ID" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 20:12:17,239  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.203) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (63A87EE8E1BF4BC7BFDACB3310BCC97A, CCECF73CAE064C27A6903F7708EC8B8D); args=('63A87EE8E1BF4BC7BFDACB3310BCC97A', 'CCECF73CAE064C27A6903F7708EC8B8D')
2023-10-18 20:12:17,552  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.281) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (63A87EE8E1BF4BC7BFDACB3310BCC97A, CCECF73CAE064C27A6903F7708EC8B8D); args=('63A87EE8E1BF4BC7BFDACB3310BCC97A', 'CCECF73CAE064C27A6903F7708EC8B8D')
2023-10-18 20:12:17,671  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (63A87EE8E1BF4BC7BFDACB3310BCC97A, CCECF73CAE064C27A6903F7708EC8B8D); args=('63A87EE8E1BF4BC7BFDACB3310BCC97A', 'CCECF73CAE064C27A6903F7708EC8B8D')
2023-10-18 20:12:17,762  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (63A87EE8E1BF4BC7BFDACB3310BCC97A, CCECF73CAE064C27A6903F7708EC8B8D); args=('63A87EE8E1BF4BC7BFDACB3310BCC97A', 'CCECF73CAE064C27A6903F7708EC8B8D')
2023-10-18 20:12:17,876  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 20:12:17,923  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 20:12:17,974  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 20:12:18,050  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE (DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类 AND DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER") = 03); args=('测试产品关注类', '03')
2023-10-18 20:12:42,455  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."ID", "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."ABBREVIATION", "OTC_DERIVATIVE_COUNTERPARTY"."NAME_ABBREVIATION", "OTC_DERIVATIVE_COUNTERPARTY"."ORGANIZATION_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTERED_ADDRESS", "OTC_DERIVATIVE_COUNTERPARTY"."OFFICE_ADDRESS", "OTC_DERIVATIVE_COUNTERPARTY"."SCOPE_BUSINESS", "OTC_DERIVATIVE_COUNTERPARTY"."START_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."END_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."LIMITED_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."MAJOR_MECHANISM", "OTC_DERIVATIVE_COUNTERPARTY"."NATURE", "OTC_DERIVATIVE_COUNTERPARTY"."APTITUDE", "OTC_DERIVATIVE_COUNTERPARTY"."LIST_ATTRIBUTE", "OTC_DERIVATIVE_COUNTERPARTY"."CAPITAL_ATTRIBUTE", "OTC_DERIVATIVE_COUNTERPARTY"."INVESTMENT_VARIETIES", "OTC_DERIVATIVE_COUNTERPARTY"."PARTY_CONTACTMAN", "OTC_DERIVATIVE_COUNTERPARTY"."ACTUAL_CONTROLLER", "OTC_DERIVATIVE_COUNTERPARTY"."LEGAL_PERSON", "OTC_DERIVATIVE_COUNTERPARTY"."PROFESSIONAL_INVESTORS", "OTC_DERIVATIVE_COUNTERPARTY"."MOBILE_PHONE", "OTC_DERIVATIVE_COUNTERPARTY"."UNIFIEDSOCIAL_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."SIGNATURE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AGREEMENT_SIGNING_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AUDIT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."PARTY_B_CONTACT", "OTC_DERIVATIVE_COUNTERPARTY"."OUR_CONTRACTUAL_SIDE", "OTC_DERIVATIVE_COUNTERPARTY"."CREDIT_RATING", "OTC_DERIVATIVE_COUNTERPARTY"."PROTOCOL_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."OPERATOR", "OTC_DERIVATIVE_COUNTERPARTY"."NONTAXRESIDENT", "OTC_DERIVATIVE_COUNTERPARTY"."RISK_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."TERMOF_INVESTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."EXPECTED_INCOME", "OTC_DERIVATIVE_COUNTERPARTY"."REPORT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."INTRODUCTION_DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."CUSTOMER_MANAGER", "OTC_DERIVATIVE_COUNTERPARTY"."NET_TRADING", "OTC_DERIVATIVE_COUNTERPARTY"."PERFORMANCE_PROTOCOL_SIGN_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."CLASSIFICATION_RATING", "OTC_DERIVATIVE_COUNTERPARTY"."SHAREHOLDER_INFO", "OTC_DERIVATIVE_COUNTERPARTY"."HOST_DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."FAX_TEL", "OTC_DERIVATIVE_COUNTERPARTY"."IS_CREDITED", "OTC_DERIVATIVE_COUNTERPARTY"."UPDATER", "OTC_DERIVATIVE_COUNTERPARTY"."UPDATE_TIME", "OTC_DERIVATIVE_COUNTERPARTY"."AML_RISK_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTERED_CAPITAL", "OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW_DES", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."ALLOW_OPTION_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."DELETE_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."VALID_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."INVALID_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."SECONDRAY_TRADER_CLIENT", "OTC_DERIVATIVE_COUNTERPARTY"."SECONDRAY_TRADER", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_CERT_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_CERT_NO", "OTC_DERIVATIVE_COUNTERPARTY"."ECIF_CUST_NO", "OTC_DERIVATIVE_COUNTERPARTY"."SETUP_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."INDUSTRY", "OTC_DERIVATIVE_COUNTERPARTY"."RETURN_VISIT_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."RETURN_VISIT_DATA_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."EXTRAN_PROSCALE_RATIO", "OTC_DERIVATIVE_COUNTERPARTY"."MARGIN_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."PRODUCT_ESTAB_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."PAYEE_MIN_TRANSFER_AMOUNT", "OTC_DERIVATIVE_COUNTERPARTY"."PAYER_MIN_TRANSFER_AMOUNT", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_COEFFICIENT", "OTC_DERIVATIVE_COUNTERPARTY"."OP_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PUT_TAKE_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."GUARANTEE_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."EXECUTE_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."BLOCK_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."INITIAL_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."FINAL_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."CREATE_BY", "OTC_DERIVATIVE_COUNTERPARTY"."CREATE_TIME", "OTC_DERIVATIVE_COUNTERPARTY"."JOB_ID", "OTC_DERIVATIVE_COUNTERPARTY"."AUDIT_STATUS_BAK", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_COUNT", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_FIRST_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_ID_BOTH", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_ID_BOTH", "OTC_DERIVATIVE_COUNTERPARTY"."FILL_ROLE", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."SIGNED_PRODUCT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."RPT_PRODCODE", "OTC_DERIVATIVE_COUNTERPARTY"."GUARANTEE_AGRMT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."COMMISSION_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."ALLOW_BUSI_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PARTIAL_MARGIN_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."COMMISSION_RATE_HK", "OTC_DERIVATIVE_COUNTERPARTY"."PREMIUM_FEE_RATIO", "OTC_DERIVATIVE_COUNTERPARTY"."INTEREST_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."INTEREST_INTERVAL", "OTC_DERIVATIVE_COUNTERPARTY"."EXCHANGE_RATE_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."AML_MONITOR_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."CPTY_NOTIONAL_LIMIT", "OTC_DERIVATIVE_COUNTERPARTY"."BENEFIT_OVER_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."FIID", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FEE_RATE_US", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FEE_RATE_HK", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FIXED_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."RELATED_PARTY_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."RELATED_PARTY_RESULT", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTER_COUNTRY", "OTC_DERIVATIVE_COUNTERPARTY"."REMARK", "OTC_DERIVATIVE_COUNTERPARTY"."OPTION_DURATION_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."TRS_DURATION_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."AML_EXCLUDE_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."ID_KIND", "OTC_DERIVATIVE_COUNTERPARTY"."GRANT_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."GRANT_BALANCE_EXPIRE_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."MARGIN_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."CONCERN_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_END_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AB_FUTURES_PREMIUM_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."AB_FUTURES_LEVEL_FACTOR", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_TYPE_OTHER", "OTC_DERIVATIVE_COUNTERPARTY"."SPREAD", "OTC_DERIVATIVE_COUNTERPARTY"."LEI_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_PROTOCOL", "OTC_DERIVATIVE_COUNTERPARTY"."PUBLIC_RELATED", "OTC_DERIVATIVE_COUNTERPARTY"."PUBLIC_STOCK_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."INTRODUCTION_OPERATOR", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW_REASON", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_PUBLIC_RELATED", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_PUBLIC_STOCK_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."EXCHANGE_REPORT_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."CHAT_ROOM_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."NO_AUTO_VISIT", "OTC_DERIVATIVE_COUNTERPARTY"."PRODUCT_REPORT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."OPTION_PRODUCT_QUALITY_REASON", "OTC_DERIVATIVE_COUNTERPARTY"."HIS_ALLOW_BUSI_TYPE" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE (DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类 AND DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER") = 02); args=('测试产品关注类', '02')
2023-10-18 20:13:05,978  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "CLIENT_REVIEW_RECORD"."RECORD_ID" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 20:13:09,328  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) UPDATE "CLIENT_REVIEW_DETAIL" SET "RECORD_ID" = 4ADBC10E4DCE49BA8F74C33D72549CA2, "CLIENT_NAME" = 11, "CLIENT_POSITION" = 老师, "EMAIL" = 123@qq.com, "PHONE" = 13112345678, "REVIEW_LOG" = 123, "SUITABILITY" = N, "SUITABILITY_LOG" = 123, "CREATED_DATETIME" = 123 WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."ID") = 2023-10-17 16:00:00; args=('4ADBC10E4DCE49BA8F74C33D72549CA2', '11', '老师', '123@qq.com', '13112345678', '123', 'N', '123', Oracle_datetime(2023, 10, 17, 16, 0), 'AFJ4CSLZC0UOV180ZCOHMYB9W994U05B')
2023-10-18 20:13:09,362  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.046) INSERT INTO "CLIENT_REVIEW_DETAIL" ("ID", "RECORD_ID", "CLIENT_NAME", "CLIENT_POSITION", "EMAIL", "PHONE", "REVIEW_LOG", "SUITABILITY", "SUITABILITY_LOG", "CREATED_DATETIME") SELECT * FROM (SELECT TO_CLOB(AFJ4CSLZC0UOV180ZCOHMYB9W994U05B) col_0, TO_CLOB(4ADBC10E4DCE49BA8F74C33D72549CA2) col_1, TO_CLOB(11) col_2, TO_CLOB(老师) col_3, TO_CLOB(123@qq.com) col_4, TO_CLOB(13112345678) col_5, TO_CLOB(123) col_6, N col_7, TO_CLOB(123) col_8, TO_TIMESTAMP(123) col_9 FROM DUAL); args=('AFJ4CSLZC0UOV180ZCOHMYB9W994U05B', '4ADBC10E4DCE49BA8F74C33D72549CA2', '11', '老师', '123@qq.com', '13112345678', '123', 'N', '123', Oracle_datetime(2023, 10, 17, 16, 0))
2023-10-18 20:13:09,395  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.032) UPDATE "CLIENT_REVIEW_RECORD" SET "DOC_ID" = , "TITLE" = , "CLIENT_NAME" = , "UNIFIEDSOCIAL_CODE" = , "REVIEW_DATE" = NULL, "REVIEW_USER" = , "REVIEW_NAME" = , "CURRENT_STATUS" = , "CURRENT_OPERATOR" = , "CURRENT_ACTIVITY_NAME" = , "RECORD_ID" = , "CREATED_DATETIME" = NULL, "WORK_PHONE" = , "PHONE" = , "SECURITY_LEVEL" = , "SECURITY_LEVEL_DETAIL" = , "URGENCY_LEVEL" = , "URGENCY_LEVEL_REASON" = , "SALE_PERSON" = , "REVIEW_TERM" = NULL, "REVIEW_PROCESS_TYPE" = , "SPECIAL_MENTIONED_CUSTOMER" = , "VERSION" = , "NO_MORE_REVIEW" = , "ACCOUNTING_FIRM_NAME" = , "SUPPLEMENTARY_MATERIALS_TIME" = NULL, "SUPPLEMENTARY_MATERIALS" = , "REACH_TO_03_DATETIME" = NULL, "SERIAL_NUMBER" =  WHERE "CLIENT_REVIEW_RECORD"."ID" IS NULL; args=('', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '202210', '', '测试专用', '', '')
2023-10-18 20:13:09,458  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) INSERT INTO "CLIENT_REVIEW_RECORD" ("ID", "DOC_ID", "TITLE", "CLIENT_NAME", "UNIFIEDSOCIAL_CODE", "REVIEW_DATE", "REVIEW_USER", "REVIEW_NAME", "CURRENT_STATUS", "CURRENT_OPERATOR", "CURRENT_ACTIVITY_NAME", "RECORD_ID", "CREATED_DATETIME", "WORK_PHONE", "PHONE", "SECURITY_LEVEL", "SECURITY_LEVEL_DETAIL", "URGENCY_LEVEL", "URGENCY_LEVEL_REASON", "SALE_PERSON", "REVIEW_TERM", "REVIEW_PROCESS_TYPE", "SPECIAL_MENTIONED_CUSTOMER", "VERSION", "NO_MORE_REVIEW", "ACCOUNTING_FIRM_NAME", "SUPPLEMENTARY_MATERIALS_TIME", "SUPPLEMENTARY_MATERIALS", "REACH_TO_03_DATETIME", "SERIAL_NUMBER") SELECT * FROM (SELECT TO_CLOB() col_0, TO_CLOB() col_1, TO_CLOB() col_2, TO_CLOB() col_3, TO_CLOB() col_4, TO_TIMESTAMP() col_5, TO_CLOB() col_6, TO_CLOB() col_7, TO_CLOB() col_8, TO_CLOB() col_9, TO_CLOB() col_10, TO_CLOB() col_11, TO_TIMESTAMP() col_12, TO_CLOB() col_13, TO_CLOB() col_14, TO_CLOB() col_15, TO_CLOB() col_16, TO_CLOB() col_17, TO_CLOB() col_18, TO_CLOB() col_19, TO_TIMESTAMP() col_20, TO_CLOB() col_21, TO_CLOB() col_22, TO_CLOB() col_23, TO_CLOB() col_24, TO_CLOB() col_25, TO_TIMESTAMP() col_26, TO_CLOB() col_27, TO_TIMESTAMP() col_28, TO_CLOB() col_29 FROM DUAL); args=('', '', '', '', '', None, '', '', '', '', '', '', None, '', '', '', '', '', '', '', None, '', '', '202210', '', '测试专用', None, '', None, '')
2023-10-18 20:19:29,740  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 20:19:29,814  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 20:19:30,463  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.594) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 20:19:30,611  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.141) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 20:19:30,666  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "CLIENT_REVIEW_RECORD"."RECORD_ID" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 20:19:30,904  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.203) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (4ADBC10E4DCE49BA8F74C33D72549CA2, 3FBE7C83E0EF472392F821EFB28BFCD5); args=('4ADBC10E4DCE49BA8F74C33D72549CA2', '3FBE7C83E0EF472392F821EFB28BFCD5')
2023-10-18 20:19:31,222  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.297) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (4ADBC10E4DCE49BA8F74C33D72549CA2, 3FBE7C83E0EF472392F821EFB28BFCD5); args=('4ADBC10E4DCE49BA8F74C33D72549CA2', '3FBE7C83E0EF472392F821EFB28BFCD5')
2023-10-18 20:19:31,358  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (4ADBC10E4DCE49BA8F74C33D72549CA2, 3FBE7C83E0EF472392F821EFB28BFCD5); args=('4ADBC10E4DCE49BA8F74C33D72549CA2', '3FBE7C83E0EF472392F821EFB28BFCD5')
2023-10-18 20:19:31,450  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (4ADBC10E4DCE49BA8F74C33D72549CA2, 3FBE7C83E0EF472392F821EFB28BFCD5); args=('4ADBC10E4DCE49BA8F74C33D72549CA2', '3FBE7C83E0EF472392F821EFB28BFCD5')
2023-10-18 20:19:31,574  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 20:19:31,626  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.046) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 20:19:31,678  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 20:19:31,765  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE (DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类 AND DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER") = 03); args=('测试产品关注类', '03')
2023-10-18 20:19:55,960  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."ID", "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."ABBREVIATION", "OTC_DERIVATIVE_COUNTERPARTY"."NAME_ABBREVIATION", "OTC_DERIVATIVE_COUNTERPARTY"."ORGANIZATION_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTERED_ADDRESS", "OTC_DERIVATIVE_COUNTERPARTY"."OFFICE_ADDRESS", "OTC_DERIVATIVE_COUNTERPARTY"."SCOPE_BUSINESS", "OTC_DERIVATIVE_COUNTERPARTY"."START_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."END_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."LIMITED_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."MAJOR_MECHANISM", "OTC_DERIVATIVE_COUNTERPARTY"."NATURE", "OTC_DERIVATIVE_COUNTERPARTY"."APTITUDE", "OTC_DERIVATIVE_COUNTERPARTY"."LIST_ATTRIBUTE", "OTC_DERIVATIVE_COUNTERPARTY"."CAPITAL_ATTRIBUTE", "OTC_DERIVATIVE_COUNTERPARTY"."INVESTMENT_VARIETIES", "OTC_DERIVATIVE_COUNTERPARTY"."PARTY_CONTACTMAN", "OTC_DERIVATIVE_COUNTERPARTY"."ACTUAL_CONTROLLER", "OTC_DERIVATIVE_COUNTERPARTY"."LEGAL_PERSON", "OTC_DERIVATIVE_COUNTERPARTY"."PROFESSIONAL_INVESTORS", "OTC_DERIVATIVE_COUNTERPARTY"."MOBILE_PHONE", "OTC_DERIVATIVE_COUNTERPARTY"."UNIFIEDSOCIAL_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."SIGNATURE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AGREEMENT_SIGNING_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AUDIT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."PARTY_B_CONTACT", "OTC_DERIVATIVE_COUNTERPARTY"."OUR_CONTRACTUAL_SIDE", "OTC_DERIVATIVE_COUNTERPARTY"."CREDIT_RATING", "OTC_DERIVATIVE_COUNTERPARTY"."PROTOCOL_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."OPERATOR", "OTC_DERIVATIVE_COUNTERPARTY"."NONTAXRESIDENT", "OTC_DERIVATIVE_COUNTERPARTY"."RISK_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."TERMOF_INVESTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."EXPECTED_INCOME", "OTC_DERIVATIVE_COUNTERPARTY"."REPORT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."INTRODUCTION_DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."CUSTOMER_MANAGER", "OTC_DERIVATIVE_COUNTERPARTY"."NET_TRADING", "OTC_DERIVATIVE_COUNTERPARTY"."PERFORMANCE_PROTOCOL_SIGN_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."CLASSIFICATION_RATING", "OTC_DERIVATIVE_COUNTERPARTY"."SHAREHOLDER_INFO", "OTC_DERIVATIVE_COUNTERPARTY"."HOST_DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."FAX_TEL", "OTC_DERIVATIVE_COUNTERPARTY"."IS_CREDITED", "OTC_DERIVATIVE_COUNTERPARTY"."UPDATER", "OTC_DERIVATIVE_COUNTERPARTY"."UPDATE_TIME", "OTC_DERIVATIVE_COUNTERPARTY"."AML_RISK_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTERED_CAPITAL", "OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW_DES", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."ALLOW_OPTION_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."DELETE_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."VALID_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."INVALID_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."SECONDRAY_TRADER_CLIENT", "OTC_DERIVATIVE_COUNTERPARTY"."SECONDRAY_TRADER", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_CERT_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_CERT_NO", "OTC_DERIVATIVE_COUNTERPARTY"."ECIF_CUST_NO", "OTC_DERIVATIVE_COUNTERPARTY"."SETUP_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."INDUSTRY", "OTC_DERIVATIVE_COUNTERPARTY"."RETURN_VISIT_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."RETURN_VISIT_DATA_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."EXTRAN_PROSCALE_RATIO", "OTC_DERIVATIVE_COUNTERPARTY"."MARGIN_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."PRODUCT_ESTAB_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."PAYEE_MIN_TRANSFER_AMOUNT", "OTC_DERIVATIVE_COUNTERPARTY"."PAYER_MIN_TRANSFER_AMOUNT", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_COEFFICIENT", "OTC_DERIVATIVE_COUNTERPARTY"."OP_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PUT_TAKE_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."GUARANTEE_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."EXECUTE_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."BLOCK_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."INITIAL_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."FINAL_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."CREATE_BY", "OTC_DERIVATIVE_COUNTERPARTY"."CREATE_TIME", "OTC_DERIVATIVE_COUNTERPARTY"."JOB_ID", "OTC_DERIVATIVE_COUNTERPARTY"."AUDIT_STATUS_BAK", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_COUNT", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_FIRST_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_ID_BOTH", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_ID_BOTH", "OTC_DERIVATIVE_COUNTERPARTY"."FILL_ROLE", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."SIGNED_PRODUCT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."RPT_PRODCODE", "OTC_DERIVATIVE_COUNTERPARTY"."GUARANTEE_AGRMT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."COMMISSION_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."ALLOW_BUSI_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PARTIAL_MARGIN_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."COMMISSION_RATE_HK", "OTC_DERIVATIVE_COUNTERPARTY"."PREMIUM_FEE_RATIO", "OTC_DERIVATIVE_COUNTERPARTY"."INTEREST_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."INTEREST_INTERVAL", "OTC_DERIVATIVE_COUNTERPARTY"."EXCHANGE_RATE_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."AML_MONITOR_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."CPTY_NOTIONAL_LIMIT", "OTC_DERIVATIVE_COUNTERPARTY"."BENEFIT_OVER_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."FIID", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FEE_RATE_US", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FEE_RATE_HK", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FIXED_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."RELATED_PARTY_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."RELATED_PARTY_RESULT", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTER_COUNTRY", "OTC_DERIVATIVE_COUNTERPARTY"."REMARK", "OTC_DERIVATIVE_COUNTERPARTY"."OPTION_DURATION_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."TRS_DURATION_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."AML_EXCLUDE_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."ID_KIND", "OTC_DERIVATIVE_COUNTERPARTY"."GRANT_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."GRANT_BALANCE_EXPIRE_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."MARGIN_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."CONCERN_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_END_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AB_FUTURES_PREMIUM_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."AB_FUTURES_LEVEL_FACTOR", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_TYPE_OTHER", "OTC_DERIVATIVE_COUNTERPARTY"."SPREAD", "OTC_DERIVATIVE_COUNTERPARTY"."LEI_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_PROTOCOL", "OTC_DERIVATIVE_COUNTERPARTY"."PUBLIC_RELATED", "OTC_DERIVATIVE_COUNTERPARTY"."PUBLIC_STOCK_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."INTRODUCTION_OPERATOR", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW_REASON", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_PUBLIC_RELATED", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_PUBLIC_STOCK_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."EXCHANGE_REPORT_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."CHAT_ROOM_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."NO_AUTO_VISIT", "OTC_DERIVATIVE_COUNTERPARTY"."PRODUCT_REPORT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."OPTION_PRODUCT_QUALITY_REASON", "OTC_DERIVATIVE_COUNTERPARTY"."HIS_ALLOW_BUSI_TYPE" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE (DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类 AND DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER") = 02); args=('测试产品关注类', '02')
2023-10-18 20:20:19,191  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "CLIENT_REVIEW_RECORD"."RECORD_ID" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 20:20:22,264  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) UPDATE "CLIENT_REVIEW_RECORD" SET "SALE_PERSON" = renyu WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") = A76E12B5878D4535881AFF9D6265CFF2; args=('renyu', 'A76E12B5878D4535881AFF9D6265CFF2')
2023-10-18 20:20:22,411  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.109) UPDATE "CLIENT_REVIEW_DETAIL" SET "RECORD_ID" = A76E12B5878D4535881AFF9D6265CFF2, "CLIENT_NAME" = 11, "CLIENT_POSITION" = 老师, "EMAIL" = 123@qq.com, "PHONE" = 13112345678, "REVIEW_LOG" = 123, "SUITABILITY" = N, "SUITABILITY_LOG" = 123, "CREATED_DATETIME" = 123 WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."ID") = 2023-10-17 16:00:00; args=('A76E12B5878D4535881AFF9D6265CFF2', '11', '老师', '123@qq.com', '13112345678', '123', 'N', '123', Oracle_datetime(2023, 10, 17, 16, 0), '3HMSLL0IFA2XELWK6DGSFSCL751DMSHQ')
2023-10-18 20:20:22,445  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.032) INSERT INTO "CLIENT_REVIEW_DETAIL" ("ID", "RECORD_ID", "CLIENT_NAME", "CLIENT_POSITION", "EMAIL", "PHONE", "REVIEW_LOG", "SUITABILITY", "SUITABILITY_LOG", "CREATED_DATETIME") SELECT * FROM (SELECT TO_CLOB(3HMSLL0IFA2XELWK6DGSFSCL751DMSHQ) col_0, TO_CLOB(A76E12B5878D4535881AFF9D6265CFF2) col_1, TO_CLOB(11) col_2, TO_CLOB(老师) col_3, TO_CLOB(123@qq.com) col_4, TO_CLOB(13112345678) col_5, TO_CLOB(123) col_6, N col_7, TO_CLOB(123) col_8, TO_TIMESTAMP(123) col_9 FROM DUAL); args=('3HMSLL0IFA2XELWK6DGSFSCL751DMSHQ', 'A76E12B5878D4535881AFF9D6265CFF2', '11', '老师', '123@qq.com', '13112345678', '123', 'N', '123', Oracle_datetime(2023, 10, 17, 16, 0))
2023-10-18 20:20:22,475  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.031) UPDATE "CLIENT_REVIEW_RECORD" SET "DOC_ID" = , "TITLE" = , "CLIENT_NAME" = , "UNIFIEDSOCIAL_CODE" = , "REVIEW_DATE" = NULL, "REVIEW_USER" = , "REVIEW_NAME" = , "CURRENT_STATUS" = , "CURRENT_OPERATOR" = , "CURRENT_ACTIVITY_NAME" = , "RECORD_ID" = , "CREATED_DATETIME" = NULL, "WORK_PHONE" = , "PHONE" = , "SECURITY_LEVEL" = , "SECURITY_LEVEL_DETAIL" = , "URGENCY_LEVEL" = , "URGENCY_LEVEL_REASON" = , "SALE_PERSON" = , "REVIEW_TERM" = NULL, "REVIEW_PROCESS_TYPE" = , "SPECIAL_MENTIONED_CUSTOMER" = , "VERSION" = , "NO_MORE_REVIEW" = , "ACCOUNTING_FIRM_NAME" = , "SUPPLEMENTARY_MATERIALS_TIME" = NULL, "SUPPLEMENTARY_MATERIALS" = , "REACH_TO_03_DATETIME" = NULL, "SERIAL_NUMBER" =  WHERE "CLIENT_REVIEW_RECORD"."ID" IS NULL; args=('', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '202210', '', '测试专用', '', '')
2023-10-18 20:20:22,536  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) INSERT INTO "CLIENT_REVIEW_RECORD" ("ID", "DOC_ID", "TITLE", "CLIENT_NAME", "UNIFIEDSOCIAL_CODE", "REVIEW_DATE", "REVIEW_USER", "REVIEW_NAME", "CURRENT_STATUS", "CURRENT_OPERATOR", "CURRENT_ACTIVITY_NAME", "RECORD_ID", "CREATED_DATETIME", "WORK_PHONE", "PHONE", "SECURITY_LEVEL", "SECURITY_LEVEL_DETAIL", "URGENCY_LEVEL", "URGENCY_LEVEL_REASON", "SALE_PERSON", "REVIEW_TERM", "REVIEW_PROCESS_TYPE", "SPECIAL_MENTIONED_CUSTOMER", "VERSION", "NO_MORE_REVIEW", "ACCOUNTING_FIRM_NAME", "SUPPLEMENTARY_MATERIALS_TIME", "SUPPLEMENTARY_MATERIALS", "REACH_TO_03_DATETIME", "SERIAL_NUMBER") SELECT * FROM (SELECT TO_CLOB() col_0, TO_CLOB() col_1, TO_CLOB() col_2, TO_CLOB() col_3, TO_CLOB() col_4, TO_TIMESTAMP() col_5, TO_CLOB() col_6, TO_CLOB() col_7, TO_CLOB() col_8, TO_CLOB() col_9, TO_CLOB() col_10, TO_CLOB() col_11, TO_TIMESTAMP() col_12, TO_CLOB() col_13, TO_CLOB() col_14, TO_CLOB() col_15, TO_CLOB() col_16, TO_CLOB() col_17, TO_CLOB() col_18, TO_CLOB() col_19, TO_TIMESTAMP() col_20, TO_CLOB() col_21, TO_CLOB() col_22, TO_CLOB() col_23, TO_CLOB() col_24, TO_CLOB() col_25, TO_TIMESTAMP() col_26, TO_CLOB() col_27, TO_TIMESTAMP() col_28, TO_CLOB() col_29 FROM DUAL); args=('', '', '', '', '', None, '', '', '', '', '', '', None, '', '', '', '', '', '', '', None, '', '', '202210', '', '测试专用', None, '', None, '')
2023-10-18 20:21:52,504  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 20:21:52,579  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 20:21:53,237  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.609) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 20:21:53,381  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.141) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 20:21:53,436  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "CLIENT_REVIEW_RECORD"."RECORD_ID" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 20:21:53,671  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.203) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (A76E12B5878D4535881AFF9D6265CFF2, 7EF9A834B8A84DED9695D9AF1470C19C); args=('A76E12B5878D4535881AFF9D6265CFF2', '7EF9A834B8A84DED9695D9AF1470C19C')
2023-10-18 20:21:53,984  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.281) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (A76E12B5878D4535881AFF9D6265CFF2, 7EF9A834B8A84DED9695D9AF1470C19C); args=('A76E12B5878D4535881AFF9D6265CFF2', '7EF9A834B8A84DED9695D9AF1470C19C')
2023-10-18 20:21:54,106  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (A76E12B5878D4535881AFF9D6265CFF2, 7EF9A834B8A84DED9695D9AF1470C19C); args=('A76E12B5878D4535881AFF9D6265CFF2', '7EF9A834B8A84DED9695D9AF1470C19C')
2023-10-18 20:21:54,181  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (A76E12B5878D4535881AFF9D6265CFF2, 7EF9A834B8A84DED9695D9AF1470C19C); args=('A76E12B5878D4535881AFF9D6265CFF2', '7EF9A834B8A84DED9695D9AF1470C19C')
2023-10-18 20:21:54,294  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 20:21:54,340  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 20:21:54,389  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 20:21:54,466  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE (DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类 AND DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER") = 03); args=('测试产品关注类', '03')
2023-10-18 20:22:18,963  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."ID", "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."ABBREVIATION", "OTC_DERIVATIVE_COUNTERPARTY"."NAME_ABBREVIATION", "OTC_DERIVATIVE_COUNTERPARTY"."ORGANIZATION_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTERED_ADDRESS", "OTC_DERIVATIVE_COUNTERPARTY"."OFFICE_ADDRESS", "OTC_DERIVATIVE_COUNTERPARTY"."SCOPE_BUSINESS", "OTC_DERIVATIVE_COUNTERPARTY"."START_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."END_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."LIMITED_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."MAJOR_MECHANISM", "OTC_DERIVATIVE_COUNTERPARTY"."NATURE", "OTC_DERIVATIVE_COUNTERPARTY"."APTITUDE", "OTC_DERIVATIVE_COUNTERPARTY"."LIST_ATTRIBUTE", "OTC_DERIVATIVE_COUNTERPARTY"."CAPITAL_ATTRIBUTE", "OTC_DERIVATIVE_COUNTERPARTY"."INVESTMENT_VARIETIES", "OTC_DERIVATIVE_COUNTERPARTY"."PARTY_CONTACTMAN", "OTC_DERIVATIVE_COUNTERPARTY"."ACTUAL_CONTROLLER", "OTC_DERIVATIVE_COUNTERPARTY"."LEGAL_PERSON", "OTC_DERIVATIVE_COUNTERPARTY"."PROFESSIONAL_INVESTORS", "OTC_DERIVATIVE_COUNTERPARTY"."MOBILE_PHONE", "OTC_DERIVATIVE_COUNTERPARTY"."UNIFIEDSOCIAL_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."SIGNATURE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AGREEMENT_SIGNING_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AUDIT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."PARTY_B_CONTACT", "OTC_DERIVATIVE_COUNTERPARTY"."OUR_CONTRACTUAL_SIDE", "OTC_DERIVATIVE_COUNTERPARTY"."CREDIT_RATING", "OTC_DERIVATIVE_COUNTERPARTY"."PROTOCOL_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."OPERATOR", "OTC_DERIVATIVE_COUNTERPARTY"."NONTAXRESIDENT", "OTC_DERIVATIVE_COUNTERPARTY"."RISK_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."TERMOF_INVESTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."EXPECTED_INCOME", "OTC_DERIVATIVE_COUNTERPARTY"."REPORT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."INTRODUCTION_DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."CUSTOMER_MANAGER", "OTC_DERIVATIVE_COUNTERPARTY"."NET_TRADING", "OTC_DERIVATIVE_COUNTERPARTY"."PERFORMANCE_PROTOCOL_SIGN_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."CLASSIFICATION_RATING", "OTC_DERIVATIVE_COUNTERPARTY"."SHAREHOLDER_INFO", "OTC_DERIVATIVE_COUNTERPARTY"."HOST_DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."FAX_TEL", "OTC_DERIVATIVE_COUNTERPARTY"."IS_CREDITED", "OTC_DERIVATIVE_COUNTERPARTY"."UPDATER", "OTC_DERIVATIVE_COUNTERPARTY"."UPDATE_TIME", "OTC_DERIVATIVE_COUNTERPARTY"."AML_RISK_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTERED_CAPITAL", "OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW_DES", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."ALLOW_OPTION_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."DELETE_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."VALID_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."INVALID_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."SECONDRAY_TRADER_CLIENT", "OTC_DERIVATIVE_COUNTERPARTY"."SECONDRAY_TRADER", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_CERT_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_CERT_NO", "OTC_DERIVATIVE_COUNTERPARTY"."ECIF_CUST_NO", "OTC_DERIVATIVE_COUNTERPARTY"."SETUP_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."INDUSTRY", "OTC_DERIVATIVE_COUNTERPARTY"."RETURN_VISIT_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."RETURN_VISIT_DATA_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."EXTRAN_PROSCALE_RATIO", "OTC_DERIVATIVE_COUNTERPARTY"."MARGIN_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."PRODUCT_ESTAB_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."PAYEE_MIN_TRANSFER_AMOUNT", "OTC_DERIVATIVE_COUNTERPARTY"."PAYER_MIN_TRANSFER_AMOUNT", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_COEFFICIENT", "OTC_DERIVATIVE_COUNTERPARTY"."OP_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PUT_TAKE_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."GUARANTEE_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."EXECUTE_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."BLOCK_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."INITIAL_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."FINAL_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."CREATE_BY", "OTC_DERIVATIVE_COUNTERPARTY"."CREATE_TIME", "OTC_DERIVATIVE_COUNTERPARTY"."JOB_ID", "OTC_DERIVATIVE_COUNTERPARTY"."AUDIT_STATUS_BAK", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_COUNT", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_FIRST_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_ID_BOTH", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_ID_BOTH", "OTC_DERIVATIVE_COUNTERPARTY"."FILL_ROLE", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."SIGNED_PRODUCT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."RPT_PRODCODE", "OTC_DERIVATIVE_COUNTERPARTY"."GUARANTEE_AGRMT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."COMMISSION_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."ALLOW_BUSI_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PARTIAL_MARGIN_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."COMMISSION_RATE_HK", "OTC_DERIVATIVE_COUNTERPARTY"."PREMIUM_FEE_RATIO", "OTC_DERIVATIVE_COUNTERPARTY"."INTEREST_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."INTEREST_INTERVAL", "OTC_DERIVATIVE_COUNTERPARTY"."EXCHANGE_RATE_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."AML_MONITOR_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."CPTY_NOTIONAL_LIMIT", "OTC_DERIVATIVE_COUNTERPARTY"."BENEFIT_OVER_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."FIID", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FEE_RATE_US", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FEE_RATE_HK", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FIXED_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."RELATED_PARTY_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."RELATED_PARTY_RESULT", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTER_COUNTRY", "OTC_DERIVATIVE_COUNTERPARTY"."REMARK", "OTC_DERIVATIVE_COUNTERPARTY"."OPTION_DURATION_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."TRS_DURATION_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."AML_EXCLUDE_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."ID_KIND", "OTC_DERIVATIVE_COUNTERPARTY"."GRANT_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."GRANT_BALANCE_EXPIRE_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."MARGIN_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."CONCERN_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_END_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AB_FUTURES_PREMIUM_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."AB_FUTURES_LEVEL_FACTOR", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_TYPE_OTHER", "OTC_DERIVATIVE_COUNTERPARTY"."SPREAD", "OTC_DERIVATIVE_COUNTERPARTY"."LEI_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_PROTOCOL", "OTC_DERIVATIVE_COUNTERPARTY"."PUBLIC_RELATED", "OTC_DERIVATIVE_COUNTERPARTY"."PUBLIC_STOCK_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."INTRODUCTION_OPERATOR", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW_REASON", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_PUBLIC_RELATED", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_PUBLIC_STOCK_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."EXCHANGE_REPORT_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."CHAT_ROOM_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."NO_AUTO_VISIT", "OTC_DERIVATIVE_COUNTERPARTY"."PRODUCT_REPORT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."OPTION_PRODUCT_QUALITY_REASON", "OTC_DERIVATIVE_COUNTERPARTY"."HIS_ALLOW_BUSI_TYPE" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE (DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类 AND DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER") = 02); args=('测试产品关注类', '02')
2023-10-18 20:22:42,441  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "CLIENT_REVIEW_RECORD"."RECORD_ID" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 20:22:45,538  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.093) UPDATE "CLIENT_REVIEW_DETAIL" SET "RECORD_ID" = 3A92FC4AEE8345AB9A05CB67C6BED640, "CLIENT_NAME" = 11, "CLIENT_POSITION" = 老师, "EMAIL" = 123@qq.com, "PHONE" = 13112345678, "REVIEW_LOG" = 123, "SUITABILITY" = N, "SUITABILITY_LOG" = 123, "CREATED_DATETIME" = 123 WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."ID") = 2023-10-17 16:00:00; args=('3A92FC4AEE8345AB9A05CB67C6BED640', '11', '老师', '123@qq.com', '13112345678', '123', 'N', '123', Oracle_datetime(2023, 10, 17, 16, 0), 'ESAEA09MQHUJMQDDITLC0V5RGXKK4XSK')
2023-10-18 20:22:45,570  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.032) INSERT INTO "CLIENT_REVIEW_DETAIL" ("ID", "RECORD_ID", "CLIENT_NAME", "CLIENT_POSITION", "EMAIL", "PHONE", "REVIEW_LOG", "SUITABILITY", "SUITABILITY_LOG", "CREATED_DATETIME") SELECT * FROM (SELECT TO_CLOB(ESAEA09MQHUJMQDDITLC0V5RGXKK4XSK) col_0, TO_CLOB(3A92FC4AEE8345AB9A05CB67C6BED640) col_1, TO_CLOB(11) col_2, TO_CLOB(老师) col_3, TO_CLOB(123@qq.com) col_4, TO_CLOB(13112345678) col_5, TO_CLOB(123) col_6, N col_7, TO_CLOB(123) col_8, TO_TIMESTAMP(123) col_9 FROM DUAL); args=('ESAEA09MQHUJMQDDITLC0V5RGXKK4XSK', '3A92FC4AEE8345AB9A05CB67C6BED640', '11', '老师', '123@qq.com', '13112345678', '123', 'N', '123', Oracle_datetime(2023, 10, 17, 16, 0))
2023-10-18 20:22:45,630  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) UPDATE "CLIENT_REVIEW_RECORD" SET "ACCOUNTING_FIRM_NAME" = 测试专用, "VERSION" = 202210 WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") = 3A92FC4AEE8345AB9A05CB67C6BED640; args=('测试专用', '202210', '3A92FC4AEE8345AB9A05CB67C6BED640')
2023-10-18 20:22:45,686  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) UPDATE "CLIENT_REVIEW_RECORD" SET "SALE_PERSON" = renyu WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") = 3A92FC4AEE8345AB9A05CB67C6BED640; args=('renyu', '3A92FC4AEE8345AB9A05CB67C6BED640')
2023-10-18 20:22:46,055  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.375) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 3A92FC4AEE8345AB9A05CB67C6BED640, "FILE_BELONG" = 主体/管理人文件 WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = 2fbb7bc4-003c-4520-a10b-e7c603482eda; args=('3A92FC4AEE8345AB9A05CB67C6BED640', '主体/管理人文件', '2fbb7bc4-003c-4520-a10b-e7c603482eda')
2023-10-18 20:22:46,417  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.359) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 3A92FC4AEE8345AB9A05CB67C6BED640, "FILE_BELONG" = 32 WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = d97d31c5-f837-4f39-bdd5-f7abead6e6d3; args=('3A92FC4AEE8345AB9A05CB67C6BED640', '32', 'd97d31c5-f837-4f39-bdd5-f7abead6e6d3')
2023-10-18 20:22:46,783  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.360) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 3A92FC4AEE8345AB9A05CB67C6BED640, "FILE_BELONG" = CSRC WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = abd82a72-5ef1-4309-8415-23cb924bc8d4; args=('3A92FC4AEE8345AB9A05CB67C6BED640', 'CSRC', 'abd82a72-5ef1-4309-8415-23cb924bc8d4')
2023-10-18 20:22:47,142  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.344) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 3A92FC4AEE8345AB9A05CB67C6BED640, "FILE_BELONG" = QCC_CREDIT_RECORD WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = 63c041cb-2fc5-4ff9-a336-9c2abb9a88aa; args=('3A92FC4AEE8345AB9A05CB67C6BED640', 'QCC_CREDIT_RECORD', '63c041cb-2fc5-4ff9-a336-9c2abb9a88aa')
2023-10-18 20:22:47,503  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.375) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 3A92FC4AEE8345AB9A05CB67C6BED640, "FILE_BELONG" = CEIDN WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = 913acd86-7d0b-4812-a8a1-2b6e9c63493f; args=('3A92FC4AEE8345AB9A05CB67C6BED640', 'CEIDN', '913acd86-7d0b-4812-a8a1-2b6e9c63493f')
2023-10-18 20:22:47,865  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.359) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 3A92FC4AEE8345AB9A05CB67C6BED640, "FILE_BELONG" = QCC_ARBITRATION WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = de5cc42b-7e84-4f01-96d5-9c3e209058db; args=('3A92FC4AEE8345AB9A05CB67C6BED640', 'QCC_ARBITRATION', 'de5cc42b-7e84-4f01-96d5-9c3e209058db')
2023-10-18 20:22:48,223  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.360) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 3A92FC4AEE8345AB9A05CB67C6BED640, "FILE_BELONG" = QCC_AUDIT_INSTITUTION WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = 32bb5468-b01b-4c46-90f6-014c468e9781; args=('3A92FC4AEE8345AB9A05CB67C6BED640', 'QCC_AUDIT_INSTITUTION', '32bb5468-b01b-4c46-90f6-014c468e9781')
2023-10-18 20:22:48,585  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.359) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 3A92FC4AEE8345AB9A05CB67C6BED640, "FILE_BELONG" = CCPAIMIS WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = de69d40f-f864-4b59-b210-878946bc9638; args=('3A92FC4AEE8345AB9A05CB67C6BED640', 'CCPAIMIS', 'de69d40f-f864-4b59-b210-878946bc9638')
2023-10-18 20:22:48,943  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.360) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 3A92FC4AEE8345AB9A05CB67C6BED640, "FILE_BELONG" = CC WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = 3d3acd98-29ec-44f6-a506-73b9cc457365; args=('3A92FC4AEE8345AB9A05CB67C6BED640', 'CC', '3d3acd98-29ec-44f6-a506-73b9cc457365')
2023-10-18 20:22:49,305  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.359) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 3A92FC4AEE8345AB9A05CB67C6BED640, "FILE_BELONG" = P2P WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = 25dedef2-55cf-4e69-b01b-0e3949e0bb45; args=('3A92FC4AEE8345AB9A05CB67C6BED640', 'P2P', '25dedef2-55cf-4e69-b01b-0e3949e0bb45')
2023-10-18 20:22:49,667  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.359) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 3A92FC4AEE8345AB9A05CB67C6BED640, "FILE_BELONG" = OTHERS WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = f42ef53d-75a8-42cb-bea8-e571f31e18aa; args=('3A92FC4AEE8345AB9A05CB67C6BED640', 'OTHERS', 'f42ef53d-75a8-42cb-bea8-e571f31e18aa')
2023-10-18 20:22:50,026  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.360) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 3A92FC4AEE8345AB9A05CB67C6BED640, "FILE_BELONG" = NECIPS WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = 734fbec5-5fcd-4d72-80d8-54de6802dce3; args=('3A92FC4AEE8345AB9A05CB67C6BED640', 'NECIPS', '734fbec5-5fcd-4d72-80d8-54de6802dce3')
2023-10-18 20:22:50,385  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.359) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 3A92FC4AEE8345AB9A05CB67C6BED640, "FILE_BELONG" = CJO WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = ac80fe8c-a00b-4264-97f9-3dfac923236b; args=('3A92FC4AEE8345AB9A05CB67C6BED640', 'CJO', 'ac80fe8c-a00b-4264-97f9-3dfac923236b')
2023-10-18 20:26:23,570  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 20:26:23,647  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 20:26:24,298  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.593) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 20:26:24,440  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.141) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 20:26:24,495  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.046) SELECT "CLIENT_REVIEW_RECORD"."RECORD_ID" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 20:26:24,734  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.203) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (3A92FC4AEE8345AB9A05CB67C6BED640, 5DF97DE8C5C24E62925295674658C585); args=('3A92FC4AEE8345AB9A05CB67C6BED640', '5DF97DE8C5C24E62925295674658C585')
2023-10-18 20:26:25,052  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.297) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (3A92FC4AEE8345AB9A05CB67C6BED640, 5DF97DE8C5C24E62925295674658C585); args=('3A92FC4AEE8345AB9A05CB67C6BED640', '5DF97DE8C5C24E62925295674658C585')
2023-10-18 20:26:25,174  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (3A92FC4AEE8345AB9A05CB67C6BED640, 5DF97DE8C5C24E62925295674658C585); args=('3A92FC4AEE8345AB9A05CB67C6BED640', '5DF97DE8C5C24E62925295674658C585')
2023-10-18 20:26:25,262  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (3A92FC4AEE8345AB9A05CB67C6BED640, 5DF97DE8C5C24E62925295674658C585); args=('3A92FC4AEE8345AB9A05CB67C6BED640', '5DF97DE8C5C24E62925295674658C585')
2023-10-18 20:26:25,381  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 20:26:25,430  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 20:26:25,471  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 20:26:25,558  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE (DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类 AND DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER") = 03); args=('测试产品关注类', '03')
2023-10-18 20:26:50,558  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."ID", "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."ABBREVIATION", "OTC_DERIVATIVE_COUNTERPARTY"."NAME_ABBREVIATION", "OTC_DERIVATIVE_COUNTERPARTY"."ORGANIZATION_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTERED_ADDRESS", "OTC_DERIVATIVE_COUNTERPARTY"."OFFICE_ADDRESS", "OTC_DERIVATIVE_COUNTERPARTY"."SCOPE_BUSINESS", "OTC_DERIVATIVE_COUNTERPARTY"."START_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."END_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."LIMITED_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."MAJOR_MECHANISM", "OTC_DERIVATIVE_COUNTERPARTY"."NATURE", "OTC_DERIVATIVE_COUNTERPARTY"."APTITUDE", "OTC_DERIVATIVE_COUNTERPARTY"."LIST_ATTRIBUTE", "OTC_DERIVATIVE_COUNTERPARTY"."CAPITAL_ATTRIBUTE", "OTC_DERIVATIVE_COUNTERPARTY"."INVESTMENT_VARIETIES", "OTC_DERIVATIVE_COUNTERPARTY"."PARTY_CONTACTMAN", "OTC_DERIVATIVE_COUNTERPARTY"."ACTUAL_CONTROLLER", "OTC_DERIVATIVE_COUNTERPARTY"."LEGAL_PERSON", "OTC_DERIVATIVE_COUNTERPARTY"."PROFESSIONAL_INVESTORS", "OTC_DERIVATIVE_COUNTERPARTY"."MOBILE_PHONE", "OTC_DERIVATIVE_COUNTERPARTY"."UNIFIEDSOCIAL_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."SIGNATURE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AGREEMENT_SIGNING_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AUDIT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."PARTY_B_CONTACT", "OTC_DERIVATIVE_COUNTERPARTY"."OUR_CONTRACTUAL_SIDE", "OTC_DERIVATIVE_COUNTERPARTY"."CREDIT_RATING", "OTC_DERIVATIVE_COUNTERPARTY"."PROTOCOL_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."OPERATOR", "OTC_DERIVATIVE_COUNTERPARTY"."NONTAXRESIDENT", "OTC_DERIVATIVE_COUNTERPARTY"."RISK_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."TERMOF_INVESTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."EXPECTED_INCOME", "OTC_DERIVATIVE_COUNTERPARTY"."REPORT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."INTRODUCTION_DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."CUSTOMER_MANAGER", "OTC_DERIVATIVE_COUNTERPARTY"."NET_TRADING", "OTC_DERIVATIVE_COUNTERPARTY"."PERFORMANCE_PROTOCOL_SIGN_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."CLASSIFICATION_RATING", "OTC_DERIVATIVE_COUNTERPARTY"."SHAREHOLDER_INFO", "OTC_DERIVATIVE_COUNTERPARTY"."HOST_DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."FAX_TEL", "OTC_DERIVATIVE_COUNTERPARTY"."IS_CREDITED", "OTC_DERIVATIVE_COUNTERPARTY"."UPDATER", "OTC_DERIVATIVE_COUNTERPARTY"."UPDATE_TIME", "OTC_DERIVATIVE_COUNTERPARTY"."AML_RISK_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTERED_CAPITAL", "OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW_DES", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."ALLOW_OPTION_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."DELETE_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."VALID_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."INVALID_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."SECONDRAY_TRADER_CLIENT", "OTC_DERIVATIVE_COUNTERPARTY"."SECONDRAY_TRADER", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_CERT_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_CERT_NO", "OTC_DERIVATIVE_COUNTERPARTY"."ECIF_CUST_NO", "OTC_DERIVATIVE_COUNTERPARTY"."SETUP_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."INDUSTRY", "OTC_DERIVATIVE_COUNTERPARTY"."RETURN_VISIT_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."RETURN_VISIT_DATA_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."EXTRAN_PROSCALE_RATIO", "OTC_DERIVATIVE_COUNTERPARTY"."MARGIN_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."PRODUCT_ESTAB_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."PAYEE_MIN_TRANSFER_AMOUNT", "OTC_DERIVATIVE_COUNTERPARTY"."PAYER_MIN_TRANSFER_AMOUNT", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_COEFFICIENT", "OTC_DERIVATIVE_COUNTERPARTY"."OP_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PUT_TAKE_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."GUARANTEE_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."EXECUTE_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."BLOCK_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."INITIAL_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."FINAL_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."CREATE_BY", "OTC_DERIVATIVE_COUNTERPARTY"."CREATE_TIME", "OTC_DERIVATIVE_COUNTERPARTY"."JOB_ID", "OTC_DERIVATIVE_COUNTERPARTY"."AUDIT_STATUS_BAK", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_COUNT", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_FIRST_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_ID_BOTH", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_ID_BOTH", "OTC_DERIVATIVE_COUNTERPARTY"."FILL_ROLE", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."SIGNED_PRODUCT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."RPT_PRODCODE", "OTC_DERIVATIVE_COUNTERPARTY"."GUARANTEE_AGRMT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."COMMISSION_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."ALLOW_BUSI_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PARTIAL_MARGIN_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."COMMISSION_RATE_HK", "OTC_DERIVATIVE_COUNTERPARTY"."PREMIUM_FEE_RATIO", "OTC_DERIVATIVE_COUNTERPARTY"."INTEREST_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."INTEREST_INTERVAL", "OTC_DERIVATIVE_COUNTERPARTY"."EXCHANGE_RATE_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."AML_MONITOR_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."CPTY_NOTIONAL_LIMIT", "OTC_DERIVATIVE_COUNTERPARTY"."BENEFIT_OVER_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."FIID", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FEE_RATE_US", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FEE_RATE_HK", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FIXED_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."RELATED_PARTY_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."RELATED_PARTY_RESULT", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTER_COUNTRY", "OTC_DERIVATIVE_COUNTERPARTY"."REMARK", "OTC_DERIVATIVE_COUNTERPARTY"."OPTION_DURATION_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."TRS_DURATION_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."AML_EXCLUDE_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."ID_KIND", "OTC_DERIVATIVE_COUNTERPARTY"."GRANT_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."GRANT_BALANCE_EXPIRE_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."MARGIN_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."CONCERN_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_END_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AB_FUTURES_PREMIUM_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."AB_FUTURES_LEVEL_FACTOR", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_TYPE_OTHER", "OTC_DERIVATIVE_COUNTERPARTY"."SPREAD", "OTC_DERIVATIVE_COUNTERPARTY"."LEI_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_PROTOCOL", "OTC_DERIVATIVE_COUNTERPARTY"."PUBLIC_RELATED", "OTC_DERIVATIVE_COUNTERPARTY"."PUBLIC_STOCK_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."INTRODUCTION_OPERATOR", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW_REASON", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_PUBLIC_RELATED", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_PUBLIC_STOCK_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."EXCHANGE_REPORT_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."CHAT_ROOM_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."NO_AUTO_VISIT", "OTC_DERIVATIVE_COUNTERPARTY"."PRODUCT_REPORT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."OPTION_PRODUCT_QUALITY_REASON", "OTC_DERIVATIVE_COUNTERPARTY"."HIS_ALLOW_BUSI_TYPE" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE (DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类 AND DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER") = 02); args=('测试产品关注类', '02')
2023-10-18 20:27:14,337  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "CLIENT_REVIEW_RECORD"."RECORD_ID" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 20:27:17,639  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) UPDATE "CLIENT_REVIEW_DETAIL" SET "RECORD_ID" = F0E2B8B711EB40DCAC42303BC4C3A6FD, "CLIENT_NAME" = 11, "CLIENT_POSITION" = 老师, "EMAIL" = 123@qq.com, "PHONE" = 13112345678, "REVIEW_LOG" = 123, "SUITABILITY" = N, "SUITABILITY_LOG" = 123, "CREATED_DATETIME" = 123 WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."ID") = 2023-10-17 16:00:00; args=('F0E2B8B711EB40DCAC42303BC4C3A6FD', '11', '老师', '123@qq.com', '13112345678', '123', 'N', '123', Oracle_datetime(2023, 10, 17, 16, 0), 'LNQG4FOIIXPO7JVBWYRMBDNRO83237Z5')
2023-10-18 20:27:17,672  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.031) INSERT INTO "CLIENT_REVIEW_DETAIL" ("ID", "RECORD_ID", "CLIENT_NAME", "CLIENT_POSITION", "EMAIL", "PHONE", "REVIEW_LOG", "SUITABILITY", "SUITABILITY_LOG", "CREATED_DATETIME") SELECT * FROM (SELECT TO_CLOB(LNQG4FOIIXPO7JVBWYRMBDNRO83237Z5) col_0, TO_CLOB(F0E2B8B711EB40DCAC42303BC4C3A6FD) col_1, TO_CLOB(11) col_2, TO_CLOB(老师) col_3, TO_CLOB(123@qq.com) col_4, TO_CLOB(13112345678) col_5, TO_CLOB(123) col_6, N col_7, TO_CLOB(123) col_8, TO_TIMESTAMP(123) col_9 FROM DUAL); args=('LNQG4FOIIXPO7JVBWYRMBDNRO83237Z5', 'F0E2B8B711EB40DCAC42303BC4C3A6FD', '11', '老师', '123@qq.com', '13112345678', '123', 'N', '123', Oracle_datetime(2023, 10, 17, 16, 0))
2023-10-18 20:27:17,729  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) UPDATE "CLIENT_REVIEW_RECORD" SET "ACCOUNTING_FIRM_NAME" = 测试专用, "VERSION" = 202210 WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") = F0E2B8B711EB40DCAC42303BC4C3A6FD; args=('测试专用', '202210', 'F0E2B8B711EB40DCAC42303BC4C3A6FD')
2023-10-18 20:29:27,764  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) UPDATE "CLIENT_REVIEW_RECORD" SET "SALE_PERSON" = renyu WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") = F0E2B8B711EB40DCAC42303BC4C3A6FD; args=('renyu', 'F0E2B8B711EB40DCAC42303BC4C3A6FD')
2023-10-18 20:29:36,750  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.359) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = F0E2B8B711EB40DCAC42303BC4C3A6FD, "FILE_BELONG" = 主体/管理人文件 WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = 24894b27-26b8-40a6-96ab-dccf039386e5; args=('F0E2B8B711EB40DCAC42303BC4C3A6FD', '主体/管理人文件', '24894b27-26b8-40a6-96ab-dccf039386e5')
2023-10-18 20:29:43,503  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.375) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = F0E2B8B711EB40DCAC42303BC4C3A6FD, "FILE_BELONG" = 32 WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = d9e3f9d6-fb71-42e3-9c64-7184601a538e; args=('F0E2B8B711EB40DCAC42303BC4C3A6FD', '32', 'd9e3f9d6-fb71-42e3-9c64-7184601a538e')
2023-10-18 20:29:46,400  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.375) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = F0E2B8B711EB40DCAC42303BC4C3A6FD, "FILE_BELONG" = CSRC WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = 959de331-d200-47f4-8c4f-2ee9e4eddb34; args=('F0E2B8B711EB40DCAC42303BC4C3A6FD', 'CSRC', '959de331-d200-47f4-8c4f-2ee9e4eddb34')
2023-10-18 20:29:48,770  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.375) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = F0E2B8B711EB40DCAC42303BC4C3A6FD, "FILE_BELONG" = QCC_CREDIT_RECORD WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = 52958ae9-8e79-4a9e-9e3d-d5fbf06c3bd8; args=('F0E2B8B711EB40DCAC42303BC4C3A6FD', 'QCC_CREDIT_RECORD', '52958ae9-8e79-4a9e-9e3d-d5fbf06c3bd8')
2023-10-18 20:29:54,925  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.375) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = F0E2B8B711EB40DCAC42303BC4C3A6FD, "FILE_BELONG" = CEIDN WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = a9675408-7de4-41a2-bef3-299fd5d64824; args=('F0E2B8B711EB40DCAC42303BC4C3A6FD', 'CEIDN', 'a9675408-7de4-41a2-bef3-299fd5d64824')
2023-10-18 20:31:15,615  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) SELECT "COUNTERPARTY_ORG"."CORPORATE_NAME" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 20:31:15,690  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 20:31:16,353  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.610) SELECT "AUSER"."USERID", "AUSER"."ORGID" FROM "AUSER" WHERE DBMS_LOB.SUBSTR("AUSER"."USERNAME") = 孙滨; args=('孙滨',)
2023-10-18 20:31:16,498  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.140) SELECT "AORG"."DEPT_CODE" FROM "AORG" WHERE DBMS_LOB.SUBSTR("AORG"."ORGID") = 2E15DA4E5517E5D748257B600023F4A5; args=('2E15DA4E5517E5D748257B600023F4A5',)
2023-10-18 20:31:16,552  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.063) SELECT "CLIENT_REVIEW_RECORD"."RECORD_ID" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 20:31:16,787  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.203) DELETE FROM "CLIENT_REVIEW_COUNTERPARTY" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_COUNTERPARTY"."RECORD_ID") IN (F0E2B8B711EB40DCAC42303BC4C3A6FD, 896A04FC4D654F7E868DEE126F6E1267); args=('F0E2B8B711EB40DCAC42303BC4C3A6FD', '896A04FC4D654F7E868DEE126F6E1267')
2023-10-18 20:31:17,106  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.281) DELETE FROM "CLIENT_REVIEW_FILE_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."RECORD_ID") IN (F0E2B8B711EB40DCAC42303BC4C3A6FD, 896A04FC4D654F7E868DEE126F6E1267); args=('F0E2B8B711EB40DCAC42303BC4C3A6FD', '896A04FC4D654F7E868DEE126F6E1267')
2023-10-18 20:31:17,226  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) DELETE FROM "CLIENT_REVIEW_DETAIL" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."RECORD_ID") IN (F0E2B8B711EB40DCAC42303BC4C3A6FD, 896A04FC4D654F7E868DEE126F6E1267); args=('F0E2B8B711EB40DCAC42303BC4C3A6FD', '896A04FC4D654F7E868DEE126F6E1267')
2023-10-18 20:31:17,313  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) DELETE FROM "CLIENT_REVIEW_RECORD" WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") IN (F0E2B8B711EB40DCAC42303BC4C3A6FD, 896A04FC4D654F7E868DEE126F6E1267); args=('F0E2B8B711EB40DCAC42303BC4C3A6FD', '896A04FC4D654F7E868DEE126F6E1267')
2023-10-18 20:31:17,430  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) UPDATE "OTC_DERIVATIVE_COUNTERPARTY" SET "RETURN_VISIT_DATE" = 2023-10-18, "AML_MONITOR_FLAG" = true, "NO_AUTO_VISIT" = false, "DELETE_FLAG" = 0 WHERE DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类; args=(datetime.date(2023, 10, 18), 'true', 'false', '0', '测试产品关注类')
2023-10-18 20:31:17,476  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) UPDATE "COUNTERPARTY_ORG" SET "AML_MONITOR_FLAG" = true WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('true', '测试产品关注类')
2023-10-18 20:31:17,525  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "COUNTERPARTY_ORG"."UNIFIEDSOCIAL_CODE" FROM "COUNTERPARTY_ORG" WHERE DBMS_LOB.SUBSTR("COUNTERPARTY_ORG"."CORPORATE_NAME") = 测试产品关注类; args=('测试产品关注类',)
2023-10-18 20:31:17,604  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.078) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE (DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类 AND DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER") = 03); args=('测试产品关注类', '03')
2023-10-18 20:31:41,991  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.093) SELECT "OTC_DERIVATIVE_COUNTERPARTY"."ID", "OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."ABBREVIATION", "OTC_DERIVATIVE_COUNTERPARTY"."NAME_ABBREVIATION", "OTC_DERIVATIVE_COUNTERPARTY"."ORGANIZATION_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTERED_ADDRESS", "OTC_DERIVATIVE_COUNTERPARTY"."OFFICE_ADDRESS", "OTC_DERIVATIVE_COUNTERPARTY"."SCOPE_BUSINESS", "OTC_DERIVATIVE_COUNTERPARTY"."START_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."END_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."LIMITED_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."MAJOR_MECHANISM", "OTC_DERIVATIVE_COUNTERPARTY"."NATURE", "OTC_DERIVATIVE_COUNTERPARTY"."APTITUDE", "OTC_DERIVATIVE_COUNTERPARTY"."LIST_ATTRIBUTE", "OTC_DERIVATIVE_COUNTERPARTY"."CAPITAL_ATTRIBUTE", "OTC_DERIVATIVE_COUNTERPARTY"."INVESTMENT_VARIETIES", "OTC_DERIVATIVE_COUNTERPARTY"."PARTY_CONTACTMAN", "OTC_DERIVATIVE_COUNTERPARTY"."ACTUAL_CONTROLLER", "OTC_DERIVATIVE_COUNTERPARTY"."LEGAL_PERSON", "OTC_DERIVATIVE_COUNTERPARTY"."PROFESSIONAL_INVESTORS", "OTC_DERIVATIVE_COUNTERPARTY"."MOBILE_PHONE", "OTC_DERIVATIVE_COUNTERPARTY"."UNIFIEDSOCIAL_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."SIGNATURE_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AGREEMENT_SIGNING_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AUDIT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."PARTY_B_CONTACT", "OTC_DERIVATIVE_COUNTERPARTY"."OUR_CONTRACTUAL_SIDE", "OTC_DERIVATIVE_COUNTERPARTY"."CREDIT_RATING", "OTC_DERIVATIVE_COUNTERPARTY"."PROTOCOL_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."OPERATOR", "OTC_DERIVATIVE_COUNTERPARTY"."NONTAXRESIDENT", "OTC_DERIVATIVE_COUNTERPARTY"."RISK_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."TERMOF_INVESTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."EXPECTED_INCOME", "OTC_DERIVATIVE_COUNTERPARTY"."REPORT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."INTRODUCTION_DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."CUSTOMER_MANAGER", "OTC_DERIVATIVE_COUNTERPARTY"."NET_TRADING", "OTC_DERIVATIVE_COUNTERPARTY"."PERFORMANCE_PROTOCOL_SIGN_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."CLASSIFICATION_RATING", "OTC_DERIVATIVE_COUNTERPARTY"."SHAREHOLDER_INFO", "OTC_DERIVATIVE_COUNTERPARTY"."HOST_DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."FAX_TEL", "OTC_DERIVATIVE_COUNTERPARTY"."IS_CREDITED", "OTC_DERIVATIVE_COUNTERPARTY"."UPDATER", "OTC_DERIVATIVE_COUNTERPARTY"."UPDATE_TIME", "OTC_DERIVATIVE_COUNTERPARTY"."AML_RISK_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTERED_CAPITAL", "OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW_DES", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."ALLOW_OPTION_LEVEL", "OTC_DERIVATIVE_COUNTERPARTY"."DELETE_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."VALID_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."INVALID_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."SECONDRAY_TRADER_CLIENT", "OTC_DERIVATIVE_COUNTERPARTY"."SECONDRAY_TRADER", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_CERT_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."ADVISOR_CERT_NO", "OTC_DERIVATIVE_COUNTERPARTY"."ECIF_CUST_NO", "OTC_DERIVATIVE_COUNTERPARTY"."SETUP_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."INDUSTRY", "OTC_DERIVATIVE_COUNTERPARTY"."RETURN_VISIT_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."RETURN_VISIT_DATA_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."EXTRAN_PROSCALE_RATIO", "OTC_DERIVATIVE_COUNTERPARTY"."MARGIN_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."PRODUCT_ESTAB_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."PAYEE_MIN_TRANSFER_AMOUNT", "OTC_DERIVATIVE_COUNTERPARTY"."PAYER_MIN_TRANSFER_AMOUNT", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_COEFFICIENT", "OTC_DERIVATIVE_COUNTERPARTY"."OP_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PUT_TAKE_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."GUARANTEE_AGREEMENT_ID", "OTC_DERIVATIVE_COUNTERPARTY"."EXECUTE_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."BLOCK_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."INITIAL_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."FINAL_PRICE_PRECISION", "OTC_DERIVATIVE_COUNTERPARTY"."CREATE_BY", "OTC_DERIVATIVE_COUNTERPARTY"."CREATE_TIME", "OTC_DERIVATIVE_COUNTERPARTY"."JOB_ID", "OTC_DERIVATIVE_COUNTERPARTY"."AUDIT_STATUS_BAK", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_COUNT", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."STAMP_FIRST_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_ID_BOTH", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_ID_BOTH", "OTC_DERIVATIVE_COUNTERPARTY"."FILL_ROLE", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."MASTER_AGREEMENT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."SUPPLEMENT_AGREEMENT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."SIGNED_PRODUCT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."RPT_PRODCODE", "OTC_DERIVATIVE_COUNTERPARTY"."GUARANTEE_AGRMT_FILE_PATH", "OTC_DERIVATIVE_COUNTERPARTY"."COMMISSION_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."ALLOW_BUSI_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PARTIAL_MARGIN_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."COMMISSION_RATE_HK", "OTC_DERIVATIVE_COUNTERPARTY"."PREMIUM_FEE_RATIO", "OTC_DERIVATIVE_COUNTERPARTY"."INTEREST_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."INTEREST_INTERVAL", "OTC_DERIVATIVE_COUNTERPARTY"."EXCHANGE_RATE_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."AML_MONITOR_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."CPTY_NOTIONAL_LIMIT", "OTC_DERIVATIVE_COUNTERPARTY"."BENEFIT_OVER_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."FIID", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FEE_RATE_US", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FEE_RATE_HK", "OTC_DERIVATIVE_COUNTERPARTY"."HK_FIXED_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."RELATED_PARTY_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."RELATED_PARTY_RESULT", "OTC_DERIVATIVE_COUNTERPARTY"."REGISTER_COUNTRY", "OTC_DERIVATIVE_COUNTERPARTY"."REMARK", "OTC_DERIVATIVE_COUNTERPARTY"."OPTION_DURATION_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."TRS_DURATION_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."AML_EXCLUDE_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."ID_KIND", "OTC_DERIVATIVE_COUNTERPARTY"."GRANT_BALANCE", "OTC_DERIVATIVE_COUNTERPARTY"."GRANT_BALANCE_EXPIRE_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."MARGIN_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."CONCERN_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_TYPE", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_END_DATE", "OTC_DERIVATIVE_COUNTERPARTY"."AB_FUTURES_PREMIUM_RATE", "OTC_DERIVATIVE_COUNTERPARTY"."AB_FUTURES_LEVEL_FACTOR", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_TYPE_OTHER", "OTC_DERIVATIVE_COUNTERPARTY"."SPREAD", "OTC_DERIVATIVE_COUNTERPARTY"."LEI_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_PROTOCOL", "OTC_DERIVATIVE_COUNTERPARTY"."PUBLIC_RELATED", "OTC_DERIVATIVE_COUNTERPARTY"."PUBLIC_STOCK_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."INTRODUCTION_OPERATOR", "OTC_DERIVATIVE_COUNTERPARTY"."CLIENT_QUALIFY_REVIEW_REASON", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_PUBLIC_RELATED", "OTC_DERIVATIVE_COUNTERPARTY"."PROD_PUBLIC_STOCK_CODE", "OTC_DERIVATIVE_COUNTERPARTY"."EXCHANGE_REPORT_FLAG", "OTC_DERIVATIVE_COUNTERPARTY"."CHAT_ROOM_NAME", "OTC_DERIVATIVE_COUNTERPARTY"."NO_AUTO_VISIT", "OTC_DERIVATIVE_COUNTERPARTY"."PRODUCT_REPORT_STATUS", "OTC_DERIVATIVE_COUNTERPARTY"."DEPARTMENT", "OTC_DERIVATIVE_COUNTERPARTY"."OPTION_PRODUCT_QUALITY_REASON", "OTC_DERIVATIVE_COUNTERPARTY"."HIS_ALLOW_BUSI_TYPE" FROM "OTC_DERIVATIVE_COUNTERPARTY" WHERE (DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."CORPORATE_NAME") = 测试产品关注类 AND DBMS_LOB.SUBSTR("OTC_DERIVATIVE_COUNTERPARTY"."IS_PROD_HOLDER") = 02); args=('测试产品关注类', '02')
2023-10-18 20:32:05,342  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) SELECT "CLIENT_REVIEW_RECORD"."RECORD_ID" FROM "CLIENT_REVIEW_RECORD" WHERE (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CLIENT_NAME") = 测试产品关注类 AND NOT (DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."CURRENT_STATUS") = CLOSED AND "CLIENT_REVIEW_RECORD"."CURRENT_STATUS" IS NOT NULL)); args=('测试产品关注类', 'CLOSED')
2023-10-18 20:32:08,443  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.094) UPDATE "CLIENT_REVIEW_DETAIL" SET "RECORD_ID" = 0, "CLIENT_NAME" = 11, "CLIENT_POSITION" = 老师, "EMAIL" = 123@qq.com, "PHONE" = 13112345678, "REVIEW_LOG" = 123, "SUITABILITY" = N, "SUITABILITY_LOG" = 123, "CREATED_DATETIME" = 123 WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_DETAIL"."ID") = 2023-10-17 16:00:00; args=('0', '11', '老师', '123@qq.com', '13112345678', '123', 'N', '123', Oracle_datetime(2023, 10, 17, 16, 0), 'DJYOIKAVZ3PZSORQZX0DKZPQR0LZ3VD7')
2023-10-18 20:32:08,475  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.031) INSERT INTO "CLIENT_REVIEW_DETAIL" ("ID", "RECORD_ID", "CLIENT_NAME", "CLIENT_POSITION", "EMAIL", "PHONE", "REVIEW_LOG", "SUITABILITY", "SUITABILITY_LOG", "CREATED_DATETIME") SELECT * FROM (SELECT TO_CLOB(DJYOIKAVZ3PZSORQZX0DKZPQR0LZ3VD7) col_0, TO_CLOB(0) col_1, TO_CLOB(11) col_2, TO_CLOB(老师) col_3, TO_CLOB(123@qq.com) col_4, TO_CLOB(13112345678) col_5, TO_CLOB(123) col_6, N col_7, TO_CLOB(123) col_8, TO_TIMESTAMP(123) col_9 FROM DUAL); args=('DJYOIKAVZ3PZSORQZX0DKZPQR0LZ3VD7', '0', '11', '老师', '123@qq.com', '13112345678', '123', 'N', '123', Oracle_datetime(2023, 10, 17, 16, 0))
2023-10-18 20:32:08,532  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.047) UPDATE "CLIENT_REVIEW_RECORD" SET "ACCOUNTING_FIRM_NAME" = 测试专用, "VERSION" = 202210 WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") = 0; args=('测试专用', '202210', '0')
2023-10-18 20:32:08,589  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.062) UPDATE "CLIENT_REVIEW_RECORD" SET "SALE_PERSON" = renyu WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_RECORD"."RECORD_ID") = 0; args=('renyu', '0')
2023-10-18 20:32:08,954  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.360) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 0, "FILE_BELONG" = 主体/管理人文件 WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = 342fa1c0-faf6-4a16-8c09-c347bf1ab135; args=('0', '主体/管理人文件', '342fa1c0-faf6-4a16-8c09-c347bf1ab135')
2023-10-18 20:32:09,321  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.375) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 0, "FILE_BELONG" = 32 WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = 76b611ea-79bb-4a7d-984c-61e007094014; args=('0', '32', '76b611ea-79bb-4a7d-984c-61e007094014')
2023-10-18 20:32:09,685  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.359) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 0, "FILE_BELONG" = CSRC WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = d4fb6366-bbbc-4f3e-bbdb-f7d00b47f17f; args=('0', 'CSRC', 'd4fb6366-bbbc-4f3e-bbdb-f7d00b47f17f')
2023-10-18 20:32:10,046  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.359) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 0, "FILE_BELONG" = QCC_CREDIT_RECORD WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = 7dc492ef-936d-4f46-acb0-2276cc1d522d; args=('0', 'QCC_CREDIT_RECORD', '7dc492ef-936d-4f46-acb0-2276cc1d522d')
2023-10-18 20:32:10,413  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.375) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 0, "FILE_BELONG" = CEIDN WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = 807c3c2c-b389-4130-955b-b3bd7dd2765f; args=('0', 'CEIDN', '807c3c2c-b389-4130-955b-b3bd7dd2765f')
2023-10-18 20:32:10,775  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.360) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 0, "FILE_BELONG" = QCC_ARBITRATION WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = 4aafeb59-6200-4655-9b88-00b9f60f14cb; args=('0', 'QCC_ARBITRATION', '4aafeb59-6200-4655-9b88-00b9f60f14cb')
2023-10-18 20:32:11,131  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.359) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 0, "FILE_BELONG" = QCC_AUDIT_INSTITUTION WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = e95e9e36-901d-4c20-93c9-11caf1d24620; args=('0', 'QCC_AUDIT_INSTITUTION', 'e95e9e36-901d-4c20-93c9-11caf1d24620')
2023-10-18 20:32:11,489  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.359) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 0, "FILE_BELONG" = CCPAIMIS WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = cc8d6337-ea06-4c53-8790-44cc2aa993a1; args=('0', 'CCPAIMIS', 'cc8d6337-ea06-4c53-8790-44cc2aa993a1')
2023-10-18 20:32:11,852  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.360) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 0, "FILE_BELONG" = CC WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = 5bb5fac0-92b5-4524-b4ea-187d88d35456; args=('0', 'CC', '5bb5fac0-92b5-4524-b4ea-187d88d35456')
2023-10-18 20:32:12,221  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.359) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 0, "FILE_BELONG" = P2P WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = 5e7acd5e-8254-40e0-ae57-730e5d30ff35; args=('0', 'P2P', '5e7acd5e-8254-40e0-ae57-730e5d30ff35')
2023-10-18 20:32:12,584  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.375) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 0, "FILE_BELONG" = OTHERS WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = 805c0972-6391-4825-85bf-50ac5f0c2620; args=('0', 'OTHERS', '805c0972-6391-4825-85bf-50ac5f0c2620')
2023-10-18 20:32:12,942  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.360) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 0, "FILE_BELONG" = NECIPS WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = c86d7684-ec2c-4c3a-b795-87ed8116d06f; args=('0', 'NECIPS', 'c86d7684-ec2c-4c3a-b795-87ed8116d06f')
2023-10-18 20:32:13,312  [DEBUG]  utils.py  .debug_sql              [128 ] :(0.359) UPDATE "CLIENT_REVIEW_FILE_RECORD" SET "RECORD_ID" = 0, "FILE_BELONG" = CJO WHERE DBMS_LOB.SUBSTR("CLIENT_REVIEW_FILE_RECORD"."S3_FILE_ID") = c0e29c15-9486-4890-928d-ace9dd2a57da; args=('0', 'CJO', 'c0e29c15-9486-4890-928d-ace9dd2a57da')
